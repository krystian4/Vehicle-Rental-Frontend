[{"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\index.js":"1","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\reportWebVitals.js":"2","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\App.js":"3","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Profile.js":"4","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Login.js":"5","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Home.js":"6","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\BoardUser.js":"7","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Register.js":"8","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Vehicles.js":"9","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\SingleVehiclePage.js":"10","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\FAQ.js":"11","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Navbar.js":"12","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Hero.js":"13","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Loading.js":"14","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Banner.js":"15","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\VehiclesContainer.js":"16","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\vehicle.service.js":"17","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\auth.service.js":"18","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\user.service.js":"19","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Vehicle.js":"20","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\auth-header.js":"21","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\BoardAdmin.js":"22","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\EditFaq.js":"23","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\BoardManager.js":"24","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\AddVehicleBoard.js":"25","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\ManageUsersBoard.js":"26","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\UsersList.js":"27","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\faq.service.js":"28","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\DeleteFaqDialog.js":"29","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\AddNewFAQModal.js":"30","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\DeleteUserDialog.js":"31","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\AddNewUserModal.js":"32"},{"size":594,"mtime":1607438216033,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":1999,"mtime":1609885214852,"results":"36","hashOfConfig":"34"},{"size":2446,"mtime":1609610776495,"results":"37","hashOfConfig":"34"},{"size":3398,"mtime":1607861969937,"results":"38","hashOfConfig":"34"},{"size":958,"mtime":1609081092858,"results":"39","hashOfConfig":"34"},{"size":768,"mtime":1607861979364,"results":"40","hashOfConfig":"34"},{"size":9055,"mtime":1609604656622,"results":"41","hashOfConfig":"34"},{"size":1587,"mtime":1609950150594,"results":"42","hashOfConfig":"34"},{"size":511,"mtime":1609943522562,"results":"43","hashOfConfig":"34"},{"size":3788,"mtime":1609973598736,"results":"44","hashOfConfig":"34"},{"size":5502,"mtime":1609945558260,"results":"45","hashOfConfig":"34"},{"size":206,"mtime":1607863334229,"results":"46","hashOfConfig":"34"},{"size":315,"mtime":1607886528149,"results":"47","hashOfConfig":"34"},{"size":255,"mtime":1607863455114,"results":"48","hashOfConfig":"34"},{"size":614,"mtime":1609702809093,"results":"49","hashOfConfig":"34"},{"size":1689,"mtime":1610035998805,"results":"50","hashOfConfig":"34"},{"size":1078,"mtime":1609977352844,"results":"51","hashOfConfig":"34"},{"size":793,"mtime":1609949728096,"results":"52","hashOfConfig":"34"},{"size":992,"mtime":1609942927723,"results":"53","hashOfConfig":"34"},{"size":260,"mtime":1609082108881,"results":"54","hashOfConfig":"34"},{"size":774,"mtime":1609849413708,"results":"55","hashOfConfig":"34"},{"size":5621,"mtime":1609970558547,"results":"56","hashOfConfig":"34"},{"size":780,"mtime":1609849785253,"results":"57","hashOfConfig":"34"},{"size":11075,"mtime":1610035106014,"results":"58","hashOfConfig":"34"},{"size":4403,"mtime":1610031836446,"results":"59","hashOfConfig":"34"},{"size":1703,"mtime":1609852515844,"results":"60","hashOfConfig":"34"},{"size":564,"mtime":1609949632719,"results":"61","hashOfConfig":"34"},{"size":1471,"mtime":1609959535255,"results":"62","hashOfConfig":"34"},{"size":3353,"mtime":1610029156888,"results":"63","hashOfConfig":"34"},{"size":1480,"mtime":1609969003574,"results":"64","hashOfConfig":"34"},{"size":11091,"mtime":1609977101064,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"cnhr2u",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\index.js",[],["133","134"],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\reportWebVitals.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\App.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Profile.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Login.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Home.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\BoardUser.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Register.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Vehicles.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\SingleVehiclePage.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\FAQ.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Navbar.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Hero.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Loading.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Banner.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\VehiclesContainer.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\vehicle.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\auth.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\user.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Vehicle.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\auth-header.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\BoardAdmin.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\EditFaq.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\BoardManager.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\AddVehicleBoard.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\ManageUsersBoard.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\UsersList.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\faq.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\DeleteFaqDialog.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\AddNewFAQModal.js",["135"],"import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FaqService from '../../services/faq.service';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nexport default function AddNewFAQModal (props){\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [fieldError, setFieldError] = React.useState(false);\r\n    const [helpText, setHelpText] = React.useState(\"\");\r\n    const [fieldError2, setFieldError2] = React.useState(false);\r\n\r\n\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n\r\n    const onChangeQuestion = (e) =>{\r\n      const q = e.target.value;\r\n      setQuestion(q);\r\n    }\r\n\r\n    const onChangeAnswer = (e) =>{\r\n      const a = e.target.value;\r\n      setAnswer(a);\r\n    }\r\n\r\n    const handleAddFAQ = () =>{\r\n        if(question === \"\"){\r\n            setFieldError(true);\r\n            setHelpText(\"Field can't be empty!\");\r\n        }\r\n        else setFieldError(false);\r\n        if(answer === \"\"){\r\n            setFieldError2(true);\r\n            setHelpText(\"Field can't be empty!\");\r\n        }\r\n        else setFieldError2(false);\r\n\r\n        if(question === \"\" || answer === \"\"){\r\n            return;\r\n        }\r\n\r\n        //fetch new array after add\r\n        //props.fetchFaq();\r\n  \r\n        //adding without server\r\n        const newArr = props.arrayFAQs;\r\n        newArr.push({id:3, \"question\":question, \"answer\":answer});\r\n        props.setFAQs([...newArr]);\r\n        //==========================\r\n        console.log(\"Added by \" + sessionStorage.getItem(\"user\"));\r\n        console.log(props.arrayFAQs);\r\n        props.setOpen(false);\r\n      }\r\n\r\n      const handleClose = () => {\r\n        props.setOpen(false);\r\n      };\r\n    \r\n      const modalBody = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Add new FAQ</h2>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField error={fieldError} helperText={helpText} id=\"standard-basic\" style={{minWidth:\"500px\"}} label=\"Question\" onChange={onChangeQuestion}/>\r\n          <TextField error={fieldError2} helperText={helpText} id=\"standard-basic\" style={{minWidth:\"500px\"}} label=\"Answer\" onChange={onChangeAnswer}/> <br /><br />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => handleAddFAQ()}>\r\n            Add\r\n          </Button>\r\n        </form>\r\n          \r\n        </div>\r\n      );\r\n\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {modalBody}\r\n      </Modal>\r\n    )\r\n}","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\DeleteUserDialog.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\AddNewUserModal.js",["136","137","138","139"],"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport { CountryDropdown} from 'react-country-region-selector';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst rpassword = (value, props, components) => {\r\n  if(value !== components['password'][0].value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The passwords are not the same.\r\n      </div>\r\n    );\r\n  }\r\n};\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n        position:'absolute',\r\n        width:'450px',\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        overflow:'scroll',\r\n        height:'90%',\r\n        display:'block',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nexport default function AddNewFAQModal (props){\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [lastname, setLastName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [country, setCountry] = useState('');\r\n    const [birthDate, setBirthDate] = useState(new Date());\r\n\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const onChangeName = (e) => {\r\n        const name = e.target.value;\r\n        setName(name);\r\n    };\r\n\r\n    const onChangeLastName = (e) => {\r\n        const lastname = e.target.value;\r\n        setLastName(lastname);\r\n    };\r\n\r\n    const onChangeAddress = (e) => {\r\n        const address = e.target.value;\r\n        setAddress(address);\r\n    };\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value;\r\n        setCity(city);\r\n    };\r\n\r\n    const onChangePhone = (e) => {\r\n        const phone = e.target.value;\r\n        setPhone(phone);\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n        AuthService.register(username, email, password, name, lastname, address, city, phone, country, birthDate).then(\r\n            (response) => {\r\n            setMessage(response.data.message);\r\n            setSuccessful(true);\r\n            },\r\n            (error) => {\r\n            const resMessage =\r\n                (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            setMessage(resMessage);\r\n            setSuccessful(false);\r\n            }\r\n        );\r\n        console.log(username, email, password, name, lastname, address, city, phone, country, birthDate);\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n      };\r\n        \r\n\r\n        \r\n        const modalBody = (\r\n            <div style={modalStyle} className={classes.paper}>\r\n            <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n            />\r\n\r\n            <Form onSubmit={handleRegister} ref={form}>\r\n            {!successful && (\r\n                <div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={onChangeEmail}\r\n                    validations={[required, validEmail]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"rpassword\">Repeat Password</label>\r\n                    <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"repeat_password\"\r\n                    validations={[required, rpassword]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={onChangeName}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"lastname\">Last Name</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={lastname}\r\n                    onChange={onChangeLastName}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"address\"\r\n                    value={address}\r\n                    onChange={onChangeAddress}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"city\">City</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"city\"\r\n                    value={city}\r\n                    onChange={onChangeCity}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={onChangePhone}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"country\">Country</label>\r\n                <div>\r\n                    <CountryDropdown style={{width:\"23rem\"}}\r\n                        name=\"country\"\r\n                        value={country}\r\n                        onChange={(value)=> setCountry(value)} \r\n                    />\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label style={{ marginRight: \"5px\" }}htmlFor=\"birthDate\">Birth date:</label>\r\n                    <DatePicker  dateFormat=\"dd/MM/yyyy\" className=\"form-control\" selected={birthDate} onChange={date => setBirthDate(date)} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n                </div>\r\n            )}\r\n\r\n            {message && (\r\n                <div className=\"form-group\">\r\n                <div\r\n                    className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\r\n                    role=\"alert\"\r\n                >\r\n                    {message}\r\n                </div>\r\n                </div>\r\n            )}\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n            </Form>\r\n        </div>\r\n        );\r\n\r\n        return(\r\n            <Modal\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            >\r\n            {modalBody}\r\n        </Modal>\r\n        )\r\n    }",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":18},{"ruleId":"144","severity":1,"message":"148","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"149","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":17},{"ruleId":"144","severity":1,"message":"150","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":20},{"ruleId":"144","severity":1,"message":"151","line":6,"column":22,"nodeType":"146","messageId":"147","endLine":6,"endColumn":29},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'FaqService' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'TextField' is defined but never used.","'Controller' is defined but never used.","'useForm' is defined but never used.","no-global-assign","no-unsafe-negation"]