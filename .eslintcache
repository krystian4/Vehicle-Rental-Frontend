[{"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\index.js":"1","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\reportWebVitals.js":"2","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\App.js":"3","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Profile.js":"4","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Login.js":"5","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Home.js":"6","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\BoardUser.js":"7","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Register.js":"8","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Vehicles.js":"9","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\SingleVehiclePage.js":"10","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\FAQ.js":"11","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Navbar.js":"12","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Hero.js":"13","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Loading.js":"14","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Banner.js":"15","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\VehiclesContainer.js":"16","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\vehicle.service.js":"17","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\auth.service.js":"18","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\user.service.js":"19","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Vehicle.js":"20","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\auth-header.js":"21","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\BoardAdmin.js":"22","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\EditFaq.js":"23","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\BoardManager.js":"24","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\AddVehicleBoard.js":"25","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\ManageUsersBoard.js":"26","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\faq.service.js":"27","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\DeleteFaqDialog.js":"28","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\AddNewFAQModal.js":"29","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\DeleteUserDialog.js":"30","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\AddNewUserModal.js":"31","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\EditFAQModal.js":"32","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\EditUserModal.js":"33","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\ManageEmployeesBoard.js":"34","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\EditEmployeeModal.js":"35","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\PasswordResetModal.js":"36","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\DriverLicenses.js":"37","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\VerifyLicenseDialog.js":"38","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\CartPage.js":"39","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\UserDrivingLicense.js":"40","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\AddLicenseModal.js":"41","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\employee.service.js":"42","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\ManageVehiclesBoard.js":"43","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\EditVehicleModal.js":"44","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\customer.service.js":"45","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\checkout\\Checkout.js":"46","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\checkout\\AddressForm.js":"47","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\checkout\\PaymentForm.js":"48","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\checkout\\Review.js":"49","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\CarFeeList.js":"50","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\AddNewInsModal.js":"51","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\Payments.js":"52","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\VerifyPaymentDialog.js":"53","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\RentalsHistoryPage.js":"54","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\VehicleRentalHistoryModal.js":"55","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\UserOrdersPage.js":"56","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\VehicleComments.js":"57","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\Offers.js":"58","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\AddOfferModal.js":"59","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\AddComplaintModal.js":"60","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\ComplaintsList.js":"61","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\RemoveComplainDialog.js":"62","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\index.js":"63","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\i18n.js":"64","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\reportWebVitals.js":"65","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\App.js":"66","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Navbar.js":"67","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Vehicles.js":"68","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Profile.js":"69","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\SingleVehiclePage.js":"70","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\FAQ.js":"71","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Home.js":"72","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Login.js":"73","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\CartPage.js":"74","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\BoardUser.js":"75","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Register.js":"76","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\EditFaq.js":"77","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\ManageVehiclesBoard.js":"78","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\Payments.js":"79","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\DriverLicenses.js":"80","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\CarFeeList.js":"81","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\ComplaintsList.js":"82","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\Offers.js":"83","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\UserOrdersPage.js":"84","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\UserDrivingLicense.js":"85","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\manager\\RentalsHistoryPage.js":"86","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\manager\\BoardManager.js":"87","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\BoardAdmin.js":"88","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\manager\\AddVehicleBoard.js":"89","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\ManageUsersBoard.js":"90","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\ManageEmployeesBoard.js":"91","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\VehiclesContainer.js":"92","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Loading.js":"93","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\PasswordResetModal.js":"94","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\VehicleComments.js":"95","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Banner.js":"96","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Hero.js":"97","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\EditEmployeeModal.js":"98","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\DeleteUserDialog.js":"99","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\AddNewUserModal.js":"100","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\EditUserModal.js":"101","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\auth.service.js":"102","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\vehicle.service.js":"103","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\user.service.js":"104","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\customer.service.js":"105","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\faq.service.js":"106","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\manager\\VehicleRentalHistoryModal.js":"107","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Vehicle.js":"108","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\employee.service.js":"109","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\auth-header.js":"110","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\AddLicenseModal.js":"111","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\AddComplaintModal.js":"112","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\AddNewInsModal.js":"113","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\AddOfferModal.js":"114","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\RemoveComplainDialog.js":"115","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\EditVehicleModal.js":"116","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\VerifyPaymentDialog.js":"117","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\VerifyLicenseDialog.js":"118","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\AddNewFAQModal.js":"119","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\EditFAQModal.js":"120","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\DeleteFaqDialog.js":"121","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\checkout\\Checkout.js":"122","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\checkout\\AddressForm.js":"123","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\checkout\\Review.js":"124","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\checkout\\PaymentForm.js":"125"},{"size":594,"mtime":1607438216033,"results":"126","hashOfConfig":"127"},{"size":362,"mtime":499162500000,"results":"128","hashOfConfig":"127"},{"size":3485,"mtime":1610740749751,"results":"129","hashOfConfig":"127"},{"size":4133,"mtime":1610810051385,"results":"130","hashOfConfig":"127"},{"size":3420,"mtime":1610958482919,"results":"131","hashOfConfig":"127"},{"size":958,"mtime":1609081092858,"results":"132","hashOfConfig":"127"},{"size":768,"mtime":1607861979364,"results":"133","hashOfConfig":"127"},{"size":9055,"mtime":1610462222892,"results":"134","hashOfConfig":"127"},{"size":1595,"mtime":1612980663740,"results":"135","hashOfConfig":"127"},{"size":7940,"mtime":1611656401958,"results":"136","hashOfConfig":"127"},{"size":3853,"mtime":1610804369375,"results":"137","hashOfConfig":"127"},{"size":7384,"mtime":1611402272374,"results":"138","hashOfConfig":"127"},{"size":206,"mtime":1607863334229,"results":"139","hashOfConfig":"127"},{"size":315,"mtime":1607886528149,"results":"140","hashOfConfig":"127"},{"size":255,"mtime":1607863455114,"results":"141","hashOfConfig":"127"},{"size":586,"mtime":1610043558120,"results":"142","hashOfConfig":"127"},{"size":1523,"mtime":1610646227964,"results":"143","hashOfConfig":"127"},{"size":1543,"mtime":1610660303853,"results":"144","hashOfConfig":"127"},{"size":3426,"mtime":1610818807638,"results":"145","hashOfConfig":"127"},{"size":2230,"mtime":1611008090579,"results":"146","hashOfConfig":"127"},{"size":260,"mtime":1610465735363,"results":"147","hashOfConfig":"127"},{"size":774,"mtime":1610058760508,"results":"148","hashOfConfig":"127"},{"size":6657,"mtime":1611010156147,"results":"149","hashOfConfig":"127"},{"size":780,"mtime":1609849785253,"results":"150","hashOfConfig":"127"},{"size":11446,"mtime":1610103891724,"results":"151","hashOfConfig":"127"},{"size":5524,"mtime":1610921623217,"results":"152","hashOfConfig":"127"},{"size":1005,"mtime":1610373880204,"results":"153","hashOfConfig":"127"},{"size":1688,"mtime":1610373883637,"results":"154","hashOfConfig":"127"},{"size":3280,"mtime":1610921785277,"results":"155","hashOfConfig":"127"},{"size":1735,"mtime":1610921617676,"results":"156","hashOfConfig":"127"},{"size":15437,"mtime":1610820677239,"results":"157","hashOfConfig":"127"},{"size":3731,"mtime":1610921827186,"results":"158","hashOfConfig":"127"},{"size":10476,"mtime":1610465608423,"results":"159","hashOfConfig":"127"},{"size":5346,"mtime":1610810293119,"results":"160","hashOfConfig":"127"},{"size":9947,"mtime":1610467807580,"results":"161","hashOfConfig":"127"},{"size":4000,"mtime":1610374465764,"results":"162","hashOfConfig":"127"},{"size":3111,"mtime":1610821951095,"results":"163","hashOfConfig":"127"},{"size":1582,"mtime":1610479370120,"results":"164","hashOfConfig":"127"},{"size":4186,"mtime":1610661924869,"results":"165","hashOfConfig":"127"},{"size":3425,"mtime":1611438755583,"results":"166","hashOfConfig":"127"},{"size":2855,"mtime":1610818671515,"results":"167","hashOfConfig":"127"},{"size":3025,"mtime":1610745629940,"results":"168","hashOfConfig":"127"},{"size":6522,"mtime":1611009375922,"results":"169","hashOfConfig":"127"},{"size":9666,"mtime":1610962524175,"results":"170","hashOfConfig":"127"},{"size":1273,"mtime":1611437867761,"results":"171","hashOfConfig":"127"},{"size":4503,"mtime":1610544954440,"results":"172","hashOfConfig":"127"},{"size":2283,"mtime":1610486870085,"results":"173","hashOfConfig":"127"},{"size":3595,"mtime":1610490020246,"results":"174","hashOfConfig":"127"},{"size":4226,"mtime":1610653477817,"results":"175","hashOfConfig":"127"},{"size":5306,"mtime":1610922757885,"results":"176","hashOfConfig":"127"},{"size":5360,"mtime":1610571305592,"results":"177","hashOfConfig":"127"},{"size":3046,"mtime":1610580065993,"results":"178","hashOfConfig":"127"},{"size":1563,"mtime":1610579777408,"results":"179","hashOfConfig":"127"},{"size":6459,"mtime":1610635571866,"results":"180","hashOfConfig":"127"},{"size":3479,"mtime":1610630756966,"results":"181","hashOfConfig":"127"},{"size":7160,"mtime":1611045511668,"results":"182","hashOfConfig":"127"},{"size":3680,"mtime":1610921620136,"results":"183","hashOfConfig":"127"},{"size":7108,"mtime":1610728849241,"results":"184","hashOfConfig":"127"},{"size":7178,"mtime":1610722986448,"results":"185","hashOfConfig":"127"},{"size":2618,"mtime":1610738968066,"results":"186","hashOfConfig":"127"},{"size":5734,"mtime":1610922273841,"results":"187","hashOfConfig":"127"},{"size":1749,"mtime":1610743642022,"results":"188","hashOfConfig":"127"},{"size":633,"mtime":1634757227526,"results":"189","hashOfConfig":"190"},{"size":640,"mtime":1634757227526,"results":"191","hashOfConfig":"190"},{"size":375,"mtime":1634747919474,"results":"192","hashOfConfig":"190"},{"size":3485,"mtime":1634747919457,"results":"193","hashOfConfig":"190"},{"size":7945,"mtime":1635009283678,"results":"194","hashOfConfig":"190"},{"size":1595,"mtime":1634747919463,"results":"195","hashOfConfig":"190"},{"size":4267,"mtime":1634842039002,"results":"196","hashOfConfig":"190"},{"size":8084,"mtime":1634842862424,"results":"197","hashOfConfig":"190"},{"size":4009,"mtime":1634841084569,"results":"198","hashOfConfig":"190"},{"size":1066,"mtime":1634841323249,"results":"199","hashOfConfig":"190"},{"size":3552,"mtime":1634841521080,"results":"200","hashOfConfig":"190"},{"size":4316,"mtime":1634840593714,"results":"201","hashOfConfig":"190"},{"size":768,"mtime":1634747919461,"results":"202","hashOfConfig":"190"},{"size":9260,"mtime":1634842612335,"results":"203","hashOfConfig":"190"},{"size":6822,"mtime":1634770004690,"results":"204","hashOfConfig":"190"},{"size":6713,"mtime":1634770771307,"results":"205","hashOfConfig":"190"},{"size":3204,"mtime":1634771334297,"results":"206","hashOfConfig":"190"},{"size":3248,"mtime":1634769769671,"results":"207","hashOfConfig":"190"},{"size":5440,"mtime":1634769113165,"results":"208","hashOfConfig":"190"},{"size":5907,"mtime":1634769352044,"results":"209","hashOfConfig":"190"},{"size":7305,"mtime":1634771112807,"results":"210","hashOfConfig":"190"},{"size":7355,"mtime":1634840063379,"results":"211","hashOfConfig":"190"},{"size":3584,"mtime":1634839722074,"results":"212","hashOfConfig":"190"},{"size":6456,"mtime":1634838780379,"results":"213","hashOfConfig":"190"},{"size":780,"mtime":1634747919470,"results":"214","hashOfConfig":"190"},{"size":774,"mtime":1634747919464,"results":"215","hashOfConfig":"190"},{"size":11703,"mtime":1634838041268,"results":"216","hashOfConfig":"190"},{"size":5695,"mtime":1634767822004,"results":"217","hashOfConfig":"190"},{"size":5826,"mtime":1634767474685,"results":"218","hashOfConfig":"190"},{"size":687,"mtime":1634764312472,"results":"219","hashOfConfig":"190"},{"size":315,"mtime":1634747919458,"results":"220","hashOfConfig":"190"},{"size":4118,"mtime":1634763782442,"results":"221","hashOfConfig":"190"},{"size":3793,"mtime":1634764187957,"results":"222","hashOfConfig":"190"},{"size":255,"mtime":1634747919457,"results":"223","hashOfConfig":"190"},{"size":206,"mtime":1634747919458,"results":"224","hashOfConfig":"190"},{"size":10099,"mtime":1634766225304,"results":"225","hashOfConfig":"190"},{"size":1804,"mtime":1634766037606,"results":"226","hashOfConfig":"190"},{"size":15556,"mtime":1634765572396,"results":"227","hashOfConfig":"190"},{"size":10637,"mtime":1634844228477,"results":"228","hashOfConfig":"190"},{"size":1543,"mtime":1634747919474,"results":"229","hashOfConfig":"190"},{"size":1523,"mtime":1634747919476,"results":"230","hashOfConfig":"190"},{"size":3426,"mtime":1634747919475,"results":"231","hashOfConfig":"190"},{"size":1273,"mtime":1634747919474,"results":"232","hashOfConfig":"190"},{"size":1005,"mtime":1634747919475,"results":"233","hashOfConfig":"190"},{"size":3590,"mtime":1634838990105,"results":"234","hashOfConfig":"190"},{"size":2327,"mtime":1634763891536,"results":"235","hashOfConfig":"190"},{"size":3025,"mtime":1634747919475,"results":"236","hashOfConfig":"190"},{"size":260,"mtime":1634747919474,"results":"237","hashOfConfig":"190"},{"size":2961,"mtime":1634839381400,"results":"238","hashOfConfig":"190"},{"size":2714,"mtime":1634839260616,"results":"239","hashOfConfig":"190"},{"size":5473,"mtime":1634768453778,"results":"240","hashOfConfig":"190"},{"size":7304,"mtime":1634768681000,"results":"241","hashOfConfig":"190"},{"size":1814,"mtime":1634771479284,"results":"242","hashOfConfig":"190"},{"size":9822,"mtime":1634770497148,"results":"243","hashOfConfig":"190"},{"size":1670,"mtime":1634771666951,"results":"244","hashOfConfig":"190"},{"size":1689,"mtime":1634771574953,"results":"245","hashOfConfig":"190"},{"size":3398,"mtime":1634768086946,"results":"246","hashOfConfig":"190"},{"size":3849,"mtime":1634770148075,"results":"247","hashOfConfig":"190"},{"size":1760,"mtime":1634769559445,"results":"248","hashOfConfig":"190"},{"size":4620,"mtime":1634843423328,"results":"249","hashOfConfig":"190"},{"size":2393,"mtime":1634843052520,"results":"250","hashOfConfig":"190"},{"size":4356,"mtime":1634843989013,"results":"251","hashOfConfig":"190"},{"size":3677,"mtime":1634843689150,"results":"252","hashOfConfig":"190"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},"cnhr2u",{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"255"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"255"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"255"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"255"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"255"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"255"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"255"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"255"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"255"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"255"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"255"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"255"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"255"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"255"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"383"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"255"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},"vdzb1k",{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"397"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"397"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"397"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"397"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"397"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"397"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"397"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"397"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"397"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"397"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"397"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"397"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"397"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"397"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"397"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"397"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"397"},"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\index.js",[],["538","539"],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\reportWebVitals.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\App.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Profile.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Login.js",["540"],"import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(\"Incorrect username or password\");\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Home.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\BoardUser.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Register.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\Vehicles.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\SingleVehiclePage.js",["541","542","543"],"import React, { useEffect, useState } from 'react'\r\nimport 'date-fns';\r\nimport { format } from \"date-fns\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport VehicleService from \"../services/vehicle.service\"\r\nimport Button from '@material-ui/core/Button';\r\nimport VehicleComments from \"../components/VehicleComments\";\r\nimport CustomerService from \"../services/customer.service\";\r\n\r\n\r\nconst SingleVehiclePage = () => {\r\n  const vehicle = JSON.parse(sessionStorage.getItem(\"vehicle\"));\r\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n  // const [startDate, setStartDate] = useState(format(new Date(), \"yyyy-MM-dd\"));\r\n  // const [endDate, setEndDate] = useState(format(new Date(), \"yyyy-MM-dd\"));\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const [resPrice, setResPrice] = useState(vehicle.price);\r\n\r\n  const [dates, setDates] = useState([]);\r\n\r\n  const [cart, setCart] = useState(JSON.parse(sessionStorage.getItem(\"cart\")));\r\n\r\n  const cartItem = {\r\n    id: vehicle.id,\r\n    brand: vehicle.brand,\r\n    model: vehicle.model,\r\n    startDate,\r\n    endDate,\r\n    resPrice,\r\n  };\r\n  const countPrice = () => {\r\n    var Difference_In_Time = endDate.getTime() - startDate.getTime();\r\n    var Difference_In_Days = Math.round(Difference_In_Time / (1000 * 3600 * 24));\r\n    setResPrice((Difference_In_Days + 1) * vehicle.price);\r\n  }\r\n\r\n  useEffect(() => {\r\n    countPrice();\r\n  }, [startDate, endDate]);\r\n\r\n  const handleStartDateChange = (date) => {\r\n    setStartDate(date);\r\n    if(endDate < date){\r\n      setEndDate(date);\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (date) => {\r\n    setEndDate(date);\r\n  };\r\n\r\n  const [status, setStatus] = useState(false);\r\n  const fetchStatus = () =>{\r\n    CustomerService.getLicenseVerificationStatus(user.idCustomer).then(\r\n      (response) => {\r\n        console.log(response);\r\n        setStatus(response.status);\r\n      },\r\n      (error)=>{\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    VehicleService.getReservationDates(vehicle.id).then(\r\n      (response) => {\r\n        setDates(response);\r\n        console.log(\"Basket: \");\r\n        console.log(cart);\r\n        console.log(\"Actual cart item: \");\r\n        console.log(cartItem);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      if(user !== null){\r\n        fetchStatus();\r\n      }\r\n  }, [])\r\n\r\n  function filterDates(date) {\r\n    const found = dates.find(res => res.startDate <= format(date, \"yyyy-MM-dd\") && res.endDate >= format(date, \"yyyy-MM-dd\"))\r\n    if (found === undefined) {\r\n      return false;\r\n    }\r\n    else return true;\r\n  }\r\n\r\n  function filterEndDates(date) {\r\n    const found = dates.find(res => (res.startDate <= format(date, \"yyyy-MM-dd\")\r\n      && res.endDate >= format(date, \"yyyy-MM-dd\"))\r\n      || (format(date, \"yyyy-MM-dd\") >= res.startDate && res.startDate > format(startDate, \"yyyy-MM-dd\")));\r\n    if (found === undefined) {\r\n      return false;\r\n    }\r\n    else return true;\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n\r\n    //console.log(\"Day diff: \");\r\n    //countPrice();\r\n    console.log(\"adding to cart\");\r\n    if (cart.length === 0) {\r\n      console.log(\"Cart was empty\");\r\n      cart.push(cartItem);\r\n      console.log(cart);\r\n\r\n    }\r\n    else {\r\n      console.log(\"Cart existed: \");\r\n      const found = cart.find(item => (item.id === cartItem.id));\r\n      if(found !== undefined){\r\n        window.alert(\"Vehicle already in cart!\");\r\n        return;\r\n      }\r\n      cart.push(cartItem);\r\n      console.log(cart);\r\n    }\r\n    sessionStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    window.location.reload(false);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\" style={{ paddingBottom: \"50px\" }}>\r\n      <header className=\"jumbotron\" style={{ paddingBottom: \"20px\", paddingTop: \"30px\", marginBottom: \"5px\" }}>\r\n        <h3>{vehicle.brand} {vehicle.model}</h3>\r\n\r\n      </header>\r\n\r\n      {/* <img className=\"w-100\" src={vehicle.pictureUrl} title={vehicle.pictureUrl} alt={vehicle.pictureUrl} /> */}\r\n      <div className=\"row\" style={{ margin: 0 }}>\r\n        <div className=\"col-lg-6\" style={{ padding: 0 }}><img className=\"w-100\" style={{ minWidth: \"450px\" }} src={vehicle.pictureUrl} title={vehicle.pictureUrl} alt={vehicle.pictureUrl} /></div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"row\">\r\n          \r\n\r\n            <div className=\"col h3\"><strong>Brand: </strong></div>\r\n            <div className=\"col h3\" style={{textAlign:\"right\"}}>{vehicle.brand}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col h4\"><strong>Model: </strong></div>\r\n            <div className=\"col h4\" style={{textAlign:\"right\"}}>{vehicle.model}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>HorsePower: </strong></div>\r\n            <div className=\"col\" style={{textAlign:\"right\"}}>{vehicle.power}HP</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>Production country: </strong></div>\r\n            <div className=\"col\" style={{textAlign:\"right\"}}>{vehicle.country}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>Production year: </strong></div>\r\n            <div className=\"col\" style={{textAlign:\"right\"}}>{vehicle.yearOfProduction}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>Category: </strong></div>\r\n            <div className=\"col\" style={{textAlign:\"right\"}}>{vehicle.category}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <br />\r\n          <br />\r\n          <p style={{margin:0, color:\"rgb(51, 77, 77)\"}}><i>Reservation</i> </p>\r\n          <hr style={{margin:0}}></hr>\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>Start Date: </strong></div>\r\n            <div className=\"col\">\r\n\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                <KeyboardDatePicker\r\n                  value={startDate}\r\n                  minDate={startDate}\r\n                  onChange={handleStartDateChange}\r\n                  format=\"yyyy-MM-dd\"\r\n                  shouldDisableDate={filterDates}\r\n                />\r\n\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>End Date: </strong></div>\r\n            <div className=\"col\">\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                <KeyboardDatePicker\r\n                  value={endDate}\r\n                  onChange={handleEndDateChange}\r\n                  format=\"yyyy-MM-dd\"\r\n                  shouldDisableDate={filterEndDates}\r\n                  minDate={startDate}\r\n                />\r\n\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>Price: </strong></div>\r\n            <div className=\"col\">{resPrice.toFixed(2)} PLN</div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      {user !== null && user.roles.includes(\"ROLE_USER\") && resPrice>0 && status && (\r\n        <div className=\"row\" style={{margin:0}}>\r\n        <Button style={{ marginLeft: \"auto\", marginTop:\"20px\" }} variant=\"contained\" color=\"primary\" onClick={handleAddToCart}>\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n      )} \r\n      \r\n      <br />\r\n      <VehicleComments vehicleId={vehicle.id} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleVehiclePage;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\FAQ.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Navbar.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Hero.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Loading.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Banner.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\VehiclesContainer.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\vehicle.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\auth.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\user.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\Vehicle.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\auth-header.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\BoardAdmin.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\EditFaq.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\BoardManager.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\AddVehicleBoard.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\ManageUsersBoard.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\faq.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\DeleteFaqDialog.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\AddNewFAQModal.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\DeleteUserDialog.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\AddNewUserModal.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\EditFAQModal.js",["544"],"import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthService from '../../services/auth.service';\r\nimport FaqService from \"../../services/faq.service\";\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n\r\nexport default function EditFAQModal (props){\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [fieldError, setFieldError] = React.useState(false);\r\n    const [fieldError2, setFieldError2] = React.useState(false);\r\n    const [helpText, setHelpText] = React.useState(\"\");\r\n    const [helpText2, setHelpText2] = React.useState(\"\");\r\n\r\n    const faq = props.faq;\r\n    const [question, setQuestion] = useState(faq.question);\r\n    const [answer, setAnswer] = useState(faq.answer);\r\n\r\n    const user = AuthService.getCurrentUser();\r\n        \r\n    const onChangeQuestion = (e) =>{\r\n      const q = e.target.value;\r\n      setQuestion(q);\r\n    }\r\n\r\n    const onChangeAnswer = (e) =>{\r\n      const a = e.target.value;\r\n      setAnswer(a);\r\n    }\r\n\r\n    const handleEditFAQ = () =>{\r\n        if(question === \"\"){\r\n            setFieldError(true);\r\n            setHelpText(\"Field can't be empty!\");\r\n        }\r\n        else setFieldError(false);\r\n        if(answer === \"\"){\r\n            setFieldError2(true);\r\n            setHelpText2(\"Field can't be empty!\");\r\n        }\r\n        else setFieldError2(false);\r\n\r\n        if(question === \"\" || answer === \"\"){\r\n            return;\r\n        }\r\n        //edit with server\r\n\r\n        //fetch new array after edit\r\n        //props.fetchFaq();\r\n        FaqService.editFaq(faq.id, question, answer).then(\r\n          (response)=>{\r\n            console.log(response);\r\n            props.fetchFaq();\r\n          },\r\n          (error)=>{\r\n            console.log(error);\r\n          }\r\n        )\r\n\r\n        //==========================\r\n        props.setOpen(false);\r\n      }\r\n\r\n      const handleClose = () => {\r\n        setFieldError(false);\r\n        setFieldError2(false);\r\n        setHelpText(\"\");\r\n        setHelpText2(\"\");\r\n\r\n        props.setOpen(false);\r\n      };\r\n    \r\n      const modalBody = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Edit FAQ</h2>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField error={fieldError} helperText={helpText} id=\"standard-basic\" style={{minWidth:\"500px\"}} label=\"Question\" onChange={onChangeQuestion} defaultValue={faq.question} />\r\n          <TextField error={fieldError2} helperText={helpText2} id=\"standard-basic\" style={{minWidth:\"500px\"}} label=\"Answer\" onChange={onChangeAnswer} defaultValue={faq.answer}/> <br /><br />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => handleEditFAQ()}>\r\n            Edit\r\n          </Button>\r\n        </form>\r\n          \r\n        </div>\r\n      );\r\n\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {modalBody}\r\n      </Modal>\r\n    )\r\n}","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\EditUserModal.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\ManageEmployeesBoard.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\admin\\EditEmployeeModal.js",["545"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport Select from \"react-validation/build/select\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport EmpService from \"../../services/employee.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst positionValidator = (value) => {\r\n  if(value === \"\"){\r\n      return (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            Choose Position!\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n        position:'absolute',\r\n        width:'450px',\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        overflow:'scroll',\r\n        height:'90%',\r\n        display:'block',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nexport default function EditEmployeeModal (props){\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(props.user.username);\r\n    const [email, setEmail] = useState(props.user.email);\r\n    const [firstName, setName] = useState(props.user.firstName);\r\n    const [lastName, setLastName] = useState(props.user.lastName);\r\n    const [jobTitle, setPosition] = useState(props.user.jobTitle);\r\n    const [bonus, setBonus] = useState(props.user.bonus);\r\n\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const [roles, setRoles] = useState([])\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email);\r\n    };\r\n\r\n    const onChangeName = (e) => {\r\n        const name = e.target.value;\r\n        setName(name);\r\n    };\r\n    const onChangeLastName = (e) => {\r\n        const lastname = e.target.value;\r\n        setLastName(lastname);\r\n    };\r\n    \r\n    const onChangePosition = (e) => {\r\n      const temp = e.target.value;\r\n      setPosition(temp);\r\n    };\r\n    const onChangeBonus = (e) => {\r\n      const temp = e.target.value;\r\n      setBonus(temp);\r\n    };\r\n\r\n\r\n  const handleChangeRole = (event) => {\r\n\r\n    const roleExists = roles.find(role => role === event.target.name) !== undefined;\r\n    const newRoles = roleExists ? roles.filter(role => role !== event.target.name) : [...roles, event.target.name];\r\n    setRoles(newRoles);\r\n\r\n  };\r\n  const roleError = roles.filter((v) => v).length < 1;\r\n\r\n  const employeeDto = {userId:props.user.userId, username,email, firstName, lastName, jobTitle, roles, bonus};\r\n\r\n  \r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n          console.log(employeeDto);\r\n          EmpService.editEmployee(employeeDto).then(\r\n            (response)=>{\r\n              console.log(response);\r\n              handleClose();\r\n            },\r\n            (error)=>{\r\n              console.log(error);\r\n            }\r\n          )\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n      };\r\n        \r\n\r\n        \r\n        const modalBody = (\r\n            <div style={modalStyle} className={classes.paper}>\r\n            <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n            />\r\n\r\n            <Form onSubmit={handleEdit} ref={form}>\r\n            {!successful && (\r\n                <div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={onChangeEmail}\r\n                    validations={[required, validEmail]}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">Name</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstName\"\r\n                    value={firstName}\r\n                    onChange={onChangeName}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"lastname\">Last Name</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={lastName}\r\n                    onChange={onChangeLastName}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"jobTitle\">\r\n                      Title\r\n                  </label>\r\n                  <Select className=\"form-control\" name='jobTitle' value={jobTitle} onChange={onChangePosition} validations={[positionValidator]}>\r\n                          <option value=''>Choose job title...</option>\r\n                          <option value='Employee'>Employee</option>\r\n                          <option value='Manager'>Manager</option>\r\n                          <option value='Admin'>Admin</option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"roles\">\r\n                      Roles\r\n                  </label>\r\n                  <br />\r\n                <FormControl style ={{margin:0}} required error={roleError} value={roles} component=\"fieldset\" className={classes.formControl}>\r\n                    <FormControlLabel\r\n                      control={<Checkbox color=\"primary\" onChange={handleChangeRole} name=\"employee\" />}\r\n                      label=\"regular\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={<Checkbox color=\"primary\" onChange={handleChangeRole} name=\"manager\" />}\r\n                      label=\"manager\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={<Checkbox color=\"primary\" onChange={handleChangeRole} name=\"admin\" />}\r\n                      label=\"admin\"\r\n                    />\r\n                  <FormHelperText>Pick at least one.</FormHelperText>\r\n                </FormControl>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"bonus\">Bonus</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"form-control w-25\"\r\n                  name=\"bonus\"\r\n                  value={bonus}\r\n                  onChange={onChangeBonus}\r\n                />\r\n            </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary btn-block\">Edit Employee</button>\r\n                </div>\r\n\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n                <div className=\"form-group\">\r\n                <div\r\n                    className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\r\n                    role=\"alert\"\r\n                >\r\n                    {message}\r\n                </div>\r\n                </div>\r\n            )}\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n            </Form>\r\n        </div>\r\n        );\r\n\r\n        return(\r\n            <Modal\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            >\r\n            {modalBody}\r\n        </Modal>\r\n        )\r\n    }","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\PasswordResetModal.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\DriverLicenses.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\VerifyLicenseDialog.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\CartPage.js",["546"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { format } from \"date-fns\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkout from \"./user/checkout/Checkout\";\r\n\r\nconst CartPage = () => {\r\n  const [cart, setCart] = useState(JSON.parse(sessionStorage.getItem(\"cart\")));\r\n  const [payButtonClicked, setPayButtonClicked] = useState(false);\r\n  \r\n  const cartTotal = cart.reduce((total, { resPrice = 0 }) => total + resPrice, 0);\r\n\r\n  const removeFromCart = (item) => {\r\n    console.log(\"removing: \" + item.id);\r\n    setCart((currentCart) => {\r\n      const indexOfItemToRemove = currentCart.findIndex((cartItem) => cartItem.id === item.id);\r\n      console.log(indexOfItemToRemove);\r\n      if (indexOfItemToRemove === -1) {\r\n        return currentCart;\r\n      }\r\n      const newCart = [...currentCart.slice(0, indexOfItemToRemove),\r\n        ...currentCart.slice(indexOfItemToRemove + 1),]\r\n        console.log(\"cart after delete: \");\r\n        console.log(newCart);\r\n        sessionStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n        window.location.reload(false);\r\n      return newCart;\r\n    });\r\n  };\r\n\r\n  const handlePay = () =>{\r\n    setPayButtonClicked(true);\r\n  }\r\n\r\n  if(payButtonClicked){\r\n    return(\r\n      <Checkout />\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\" style={{paddingBottom:\"20px\", paddingTop:\"30px\", marginBottom:\"5px\"}}>\r\n      <h3>Ready to reserve</h3>\r\n\r\n      </header>\r\n\r\n        <TableContainer component={Paper}>\r\n        <Table  aria-label=\"simple table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>Brand</TableCell>\r\n                <TableCell align=\"right\">Model</TableCell>\r\n                <TableCell align=\"right\">Start Date</TableCell>\r\n                <TableCell align=\"right\">End Date</TableCell>\r\n                <TableCell align=\"right\">Price</TableCell>\r\n                <TableCell align=\"right\">Action</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {cart.map((vehicle, index) => (\r\n                <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {vehicle.brand}{vehicle.id}  \r\n                </TableCell>\r\n                <TableCell align=\"right\">{vehicle.model}</TableCell>\r\n                <TableCell align=\"right\">{format(new Date(vehicle.startDate), \"yyyy-MM-dd\")}</TableCell>\r\n                <TableCell align=\"right\">{format(new Date(vehicle.endDate), \"yyyy-MM-dd\")}</TableCell>\r\n                <TableCell align=\"right\">{vehicle.resPrice.toFixed(2)}</TableCell>\r\n\r\n\r\n                {/* <TableCell align=\"right\">{format(new Date(vehicle.endDate), \"yyyy-MM-dd\")}</TableCell>\r\n                <TableCell align=\"right\">{format(vehicle.endDate, \"yyyy-MM-dd\")}</TableCell> */}\r\n\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"delete\" onClick={() => removeFromCart(vehicle)}>\r\n                            <DeleteIcon />\r\n                    </IconButton>\r\n                </TableCell>\r\n                </TableRow>\r\n            ))}\r\n            <TableRow >\r\n                <TableCell  colSpan={5} align=\"right\">Order total: <strong>{cartTotal}.00PLN</strong></TableCell>\r\n\r\n            </TableRow>\r\n            </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        <div className=\"row\" style={{margin:0}}>\r\n          <Button style={{ marginLeft:\"auto\", width:\"16%\", marginTop:\"5px\", marginBottom:\"10px\"}} variant=\"contained\" color=\"primary\" onClick={()=> handlePay()}>\r\n                            Pay\r\n          </Button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\UserDrivingLicense.js",["547"],"import React, { useState, useEffect } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddLicenseModal from \"./AddLicenseModal\";\r\nimport CustomerService from \"../../services/customer.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    control: {\r\n      padding: theme.spacing(2)\r\n    }\r\n  }));\r\n\r\nconst UserDrivingLicense = () => {\r\n    const user= AuthService.getCurrentUser();\r\n    const classes = useStyles();\r\n    const [licenseModalOpen, setOpenAddLicenseModal] = useState(false);\r\n    const [licenseNumber, setLicenseNumber] = useState(false);\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const fetchLicense = () =>{\r\n      CustomerService.getCustomerDriverLicense(user.idCustomer).then(\r\n        (response) => {\r\n          console.log(response.idCustomer);\r\n          setLicenseNumber(response.idCustomer);\r\n        },\r\n        (error)=>{\r\n          console.log(error);\r\n        }\r\n      )\r\n    }\r\n    const fetchStatus = () =>{\r\n      CustomerService.getLicenseVerificationStatus(user.idCustomer).then(\r\n        (response) => {\r\n          console.log(response);\r\n          setStatus(response.status);\r\n        },\r\n        (error)=>{\r\n          console.log(error);\r\n        }\r\n      )\r\n    }\r\n\r\n    useEffect(()=>{\r\n      fetchLicense();\r\n      fetchStatus();\r\n    }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>Your Driving License</h3>\r\n      </header>\r\n\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Paper className={classes.paper}>\r\n                  <ul style={{listStyleType:\"none\"}}>\r\n                      <li style={licenseNumber ? {} : { color: \"red\" }} ><strong>License number:</strong> {licenseNumber ? licenseNumber: \"EMPTY\"}</li>\r\n                      <li><strong>First Name:</strong> {user.firstName}</li>\r\n                      <li><strong>Last Name: </strong>{user.lastName}</li>\r\n                      <li><strong>Address: </strong>{user.address}</li>\r\n                      <li><strong>City: </strong>{user.city}</li>\r\n                      <li><strong>Country: </strong>{user.country}</li>\r\n                      <li style={status ? {color: \"green\"} : { color: \"red\" }} ><strong>Status:</strong> {status ? \"VERIFIED\": \"NOT VERIFIED\"}</li>\r\n\r\n                  </ul>\r\n                    {!licenseNumber && \r\n                      <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                        setOpenAddLicenseModal(true);\r\n                    }}>\r\n                        Add license\r\n                    </Button>\r\n                    }\r\n                    \r\n              </Paper>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {licenseModalOpen && (\r\n        <AddLicenseModal \r\n            setOpen={setOpenAddLicenseModal}\r\n            open={licenseModalOpen}\r\n            setLicenseNumber={setLicenseNumber}\r\n        />\r\n      )}\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDrivingLicense;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\AddLicenseModal.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\employee.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\ManageVehiclesBoard.js",["548"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Loading from \"../../components/Loading\";\r\nimport VehicleService from \"../../services/vehicle.service\";\r\nimport EditVehicleModal from \"./EditVehicleModal\";\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n  });\r\n  \r\n  function Row(props) {\r\n    const { vehicle } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useRowStyles();\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <TableRow className={classes.root} >\r\n          <TableCell style={{width:\"60px\"}}>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell >\r\n          <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n            <strong>ID: </strong>{vehicle.id}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n            <strong>Brand: </strong>{vehicle.brand}\r\n          </TableCell>\r\n          <TableCell align=\"left\"  >\r\n            <strong>Model: </strong>{vehicle.model}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n          <strong>Category: </strong>{vehicle.category}\r\n          </TableCell>\r\n          <TableCell align=\"right\" >\r\n          <strong>Price: </strong>{vehicle.price}PLN\r\n          </TableCell>\r\n          <TableCell style={{  padding: 0 }} align=\"right\">\r\n                <IconButton aria-label=\"edit\" className={classes.margin} onClick={()=>{\r\n                  props.setEditVehicleOpen(true);\r\n                  props.setVehicle(vehicle);\r\n                }\r\n                }>\r\n                          <EditIcon />\r\n                </IconButton>\r\n                {/* <IconButton aria-label=\"delete\" className={classes.margin}>\r\n                          <DeleteIcon />\r\n                </IconButton> */}\r\n          </TableCell>\r\n        </TableRow>\r\n\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Details</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n  \r\n                  <TableBody>\r\n                    <TableRow>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><img style={{width:\"10rem\"}} src={vehicle.pictureUrl} alt=\"Vehicle\" title={vehicle.pictureUrl} /></TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Production country:</strong><br />{vehicle.country}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Production year:</strong><br />{vehicle.yearOfProduction}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Power:</strong><br />{vehicle.power}HP</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"right\"><strong>Description:</strong><br /> {vehicle.description}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n  \r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const ManageVehicleBoard = () => {\r\n    const [vehicles, setVehicles] = useState([])\r\n    const [loading, setLoading]= useState(true)\r\n    const [message, setMessage] = useState(\"No FAQs here\")\r\n    const [vehicle, setVehicle] = useState(null);\r\n\r\n    //const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [editVehicleOpen, setEditVehicleOpen] = useState(false);\r\n\r\n    const fetchVehicles = () =>{\r\n      VehicleService.getVehicles().then((response)=>{\r\n        setVehicles(response);\r\n        console.log(response);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) =>{\r\n        console.log(err);\r\n        setMessage(\"Connection error\")\r\n        setLoading(false);\r\n    }) \r\n    }\r\n    useEffect(() => {\r\n      fetchVehicles();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      fetchVehicles();\r\n    }, [editVehicleOpen])\r\n\r\n    if(loading){\r\n      return(\r\n          <div className='container'>\r\n              <Loading type='bars' color='grey' />\r\n          </div>\r\n      )\r\n  }\r\n  if(vehicles.length === 0){\r\n    return(\r\n        <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n            <h2>{message}</h2>\r\n        </header>\r\n        </div>\r\n    )\r\n}\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"container\">\r\n\r\n      {/* {dialogOpen && (\r\n        <DeleteFaqDialog\r\n              faqId={FAQID}\r\n              setOpen={setDialogOpen}\r\n              open={dialogOpen}\r\n          />\r\n      )} */}\r\n          \r\n      {editVehicleOpen && (\r\n        <EditVehicleModal \r\n            setOpen={setEditVehicleOpen}\r\n            open={editVehicleOpen}\r\n            vehicle={vehicle}\r\n        />\r\n      )} \r\n\r\n      <header className=\"jumbotron\">\r\n        <h3>Edit Vehicles</h3>\r\n      </header>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableBody>\r\n            {vehicles.map((vehicle) => (\r\n              <Row key={vehicle.id} vehicle={vehicle} setVehicle={setVehicle} setEditVehicleOpen={setEditVehicleOpen}/>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ManageVehicleBoard;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\EditVehicleModal.js",["549"],"import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport Select from \"react-validation/build/select\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { CountryDropdown} from 'react-country-region-selector';\r\nimport VehicleService from \"../../services/vehicle.service\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport CurrencyInput from 'react-currency-input-field';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\nconst brandValidator = (value) => {\r\n    if(value === \"\"){\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              Choose Brand!\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n        position:'absolute',\r\n        width:'450px',\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        overflow:'scroll',\r\n        height:'90%',\r\n        display:'block',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nconst EditVehicleModal = (props) => {\r\n    const vehicle = props.vehicle;\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [brand, setBrand] = useState(vehicle.brand);\r\n    const [category, setCategory] = useState(vehicle.category);\r\n    const [model, setModel] = useState(vehicle.model);\r\n    const [year, setYear] = useState(vehicle.yearOfProduction);\r\n    const [country, setCountry] = useState(vehicle.country);\r\n    const [power, setPower] = useState(vehicle.power);\r\n    const [price, setPrice] = useState(vehicle.price);\r\n    const [description, setDesc] = useState(vehicle.description);\r\n    const [picture, setPicture] = useState(vehicle.pictureUrl);\r\n\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeBrand = (e) => {\r\n        const brand = e.target.value;\r\n        setBrand(brand);\r\n    }\r\n\r\n    const onChangeCategory = (e) => {\r\n      const category = e.target.value;\r\n      setCategory(category);\r\n  }\r\n\r\n    const onChangeModel = (e) =>{\r\n        const model = e.target.value;\r\n        setModel(model);\r\n    }\r\n\r\n    const onChangeYear = (e) =>{\r\n        const year = e.target.value;\r\n        setYear(year);\r\n    }\r\n\r\n    const onChangePower = (e) =>{\r\n        const power = e.target.value;\r\n        setPower(power);\r\n    }\r\n    const onChangeDesc = (e) =>{\r\n        const description = e.target.value;\r\n        setDesc(description);\r\n    }\r\n    const onChangePicture = (e) =>{\r\n        const picture = e.target.value;\r\n        setPicture(picture);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        form.current.validateAll();\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        if (checkBtn.current.context._errors.length === 0 && country !== \"\" )  {\r\n          \r\n          const vehicleDto = {id:vehicle.id,brand, model, yearOfProduction:year, country, power, price, description, pictureUrl:picture, category};\r\n          console.log(\"Pressed edit button\");\r\n            VehicleService.updateVehicle(vehicleDto).then(\r\n                (response)=>{\r\n                    console.log(response);\r\n                    handleClose();\r\n                },\r\n                (error)=>{\r\n                    console.log(error);\r\n                }\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n      };\r\n\r\n    const modalBody = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      \r\n        <Form ref={form} onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"brand\">\r\n                    Brand:\r\n                </label>\r\n                <Select className=\"form-control\" value={brand} name='brand' onChange={onChangeBrand} validations={[brandValidator]}>\r\n                        <option value=''>Choose brand...</option>\r\n                        <option value='Audi'>Audi</option>\r\n                        <option value='BMW'>BMW</option>\r\n                        <option value='Ferrari'>Ferrari</option>\r\n                        <option value='Mercedes'>Mercedes</option>\r\n                        <option value='Nissan'>Nissan</option>\r\n                        <option value='Volkswagen'>Volkswagen</option>\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"brand\">\r\n                    Brand:\r\n                </label>\r\n                <Select className=\"form-control\" name='brand' value={category} onChange={onChangeCategory} validations={[brandValidator]}>\r\n                        <option value=''>Choose category...</option>\r\n                        <option value='HATCHBACK'>Hatchback</option>\r\n                        <option value='SEDAN'>Sedan</option>\r\n                        <option value='SUV'>SUV</option>\r\n                        <option value='COUPE'>Coupe</option>\r\n                        <option value='SPORTS'>Sports</option>\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"model\">Model</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"model\"\r\n                  value={model}\r\n                  onChange={onChangeModel}\r\n                  validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"year\">Production Year</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"form-control w-25\"\r\n                  name=\"year\"\r\n                  value={year}\r\n                  onChange={onChangeYear}\r\n                  validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <label htmlFor=\"country\">Country</label>\r\n               <div>\r\n                  <CountryDropdown\r\n                    className=\"form-control\"\r\n                    name=\"country\"\r\n                    value={country}\r\n                    onChange={(value)=> setCountry(value)}\r\n                  />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"power\">Power</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"form-control w-25\"\r\n                  name=\"power\"\r\n                  value={power}\r\n                  onChange={onChangePower}\r\n                  validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"price\">Price per Day</label>\r\n                <CurrencyInput\r\n                  className=\"form-control w-25\"\r\n                  name=\"price\"\r\n                  placeholder=\"PLN\"\r\n                  value={price}\r\n                  allowDecimals={true}\r\n                  decimalsLimit={2}\r\n                  onChange={(value) => setPrice(value)}\r\n             />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={onChangeDesc}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"picture\">Picture url</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"picture\"\r\n                  value={picture}\r\n                  onChange={onChangePicture}\r\n                  validations={[required]}\r\n                />\r\n                <br />\r\n                <img className=\"w-100\" src={picture} alt={picture}></img>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Edit vehicle</button>\r\n            </div>\r\n\r\n            {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n\r\n        </Form>\r\n    </div>\r\n\r\n    )\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        >\r\n        {modalBody}\r\n    </Modal>\r\n    );\r\n    \r\n  \r\n};\r\n\r\nexport default EditVehicleModal;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\services\\customer.service.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\checkout\\Checkout.js",["550"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport CustomerService from \"../../../services/customer.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\r\nconst card = {cash:false, cardName:\"\", cardNumber:\"\", expDate:\"\", cvv:\"\"};\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [info, setInfo] = useState(\"\");\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n            return <AddressForm />;\r\n            case 1:\r\n            return <PaymentForm card={card} />;\r\n            case 2:\r\n            return <Review card={card} setInfo={setInfo}/>;\r\n            default:\r\n            throw new Error('Unknown step');\r\n        }\r\n        }\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    if(activeStep + 1 === steps.length){\r\n        console.log(\"Order has been finalized\");\r\n        console.log(info);\r\n        let payment;\r\n\r\n        if(card.cash){\r\n            payment = \"cash\"\r\n        }\r\n        else payment = \"card\"\r\n\r\n        CustomerService.confirmOrder(info, payment).then(\r\n          (response)=>{\r\n              console.log(\"w srodku confirmOrder\");\r\n              console.log(response);\r\n          },\r\n          (error)=>{\r\n              console.log(error);\r\n          }\r\n        )\r\n    }\r\n\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      \r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\checkout\\AddressForm.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\checkout\\PaymentForm.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\checkout\\Review.js",["551"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { format } from \"date-fns\";\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const card = props.card;\r\n\r\n  const [cart, setCart] = React.useState(JSON.parse(sessionStorage.getItem(\"cart\")));\r\n  const cartTotal = cart.reduce((total, { resPrice = 0 }) => total + resPrice, 0);\r\n  \r\n  const handleAddInfChange = (event) =>{\r\n      props.setInfo(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {cart.map((product, index) => (\r\n          <ListItem className={classes.listItem} key={index}>\r\n            <ListItemText primary={index+1 + \". \" +product.brand + \" \" + product.model} secondary={format(new Date(product.startDate), \"yyyy/MM/dd\") + \" - \" + format(new Date(product.endDate), \"yyyy/MM/dd\")} />\r\n            <Typography variant=\"body2\">{product.resPrice}.00PLN</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {cartTotal}.00PLN\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Our Localization\r\n          </Typography>\r\n          <Typography gutterBottom>VehicleRental</Typography>\r\n          <Typography gutterBottom>ul. Słoneczna 10</Typography>\r\n          <Typography gutterBottom>Kraków</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          \r\n              {card.cash && (\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                    <Typography gutterBottom>Paid with cash</Typography>  \r\n                    </Grid>\r\n                  </Grid>\r\n              )}\r\n\r\n              {!card.cash && (\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>Name</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{card.cardName}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>Number</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{card.cardNumber}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>Expiration Date</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{card.expDate}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>CVV</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{card.cvv}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n              )}\r\n        </Grid>\r\n        <Typography variant=\"h6\" gutterBottom className={classes.title}>Additional Informations</Typography>\r\n        <TextareaAutosize onChange={handleAddInfChange} style={{width:\"100%\"}} rowsMin=\"5\" />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\CarFeeList.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\AddNewInsModal.js",["552"],"import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CurrencyInput from 'react-currency-input-field';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport 'date-fns';\r\nimport { format } from \"date-fns\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport EmpService from \"../../services/employee.service\";\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n\r\nexport default function EditFAQModal (props){\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const [vehicleId, setId] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n\r\n\r\n        \r\n    const onChangeId = (e) =>{\r\n      const q = e.target.value;\r\n      setId(q);\r\n    }\r\n\r\n\r\n    const handleAdd = () =>{\r\n        if(props.isInsurancesList){\r\n            console.log(\"add insurance\");\r\n            EmpService.addInsurance(vehicleId, startDate, endDate, price).then(\r\n                (response)=>{\r\n                    console.log(response);\r\n                    props.fetchInsurances();\r\n                },\r\n                (error=>{\r\n                    console.log(error);\r\n                })\r\n            )\r\n        }\r\n        else{\r\n            console.log(\"add inspection\");\r\n            EmpService.addInspection(vehicleId, startDate, endDate, price).then(\r\n                (response)=>{\r\n                    console.log(response);\r\n                    props.fetchInspectionsAdd();\r\n                },\r\n                (error=>{\r\n                    console.log(error);\r\n                })\r\n            )\r\n        }\r\n        props.setOpen(false);\r\n      }\r\n\r\n      const handleClose = () => {\r\n\r\n        props.setOpen(false);\r\n      };\r\n\r\n      const handleStartDateChange = (date) => {\r\n        setStartDate(date);\r\n      };\r\n    \r\n      const handleEndDateChange = (date) => {\r\n        setEndDate(date);\r\n      };\r\n    \r\n      const modalBody = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">{props.isInsurancesList ? \"Add new Insurance\" : \"Add new Inspection\"}</h2>\r\n        <form className={classes.root} autoComplete=\"off\">\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n            <TextField type=\"number\" label=\"Vehicle ID\" onChange={onChangeId} />\r\n        </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n                <label style={{paddingTop:\"8px\"}} htmlFor=\"price\">Price: </label>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={10}>\r\n                <CurrencyInput\r\n                        style={{minWidth:\"6rem\"}}\r\n                        className=\"form-control w-25\"\r\n                        name=\"price\"\r\n                        placeholder=\"PLN\"\r\n                        allowDecimals={true}\r\n                        decimalsLimit={2}\r\n                        onChange={(value) => setPrice(value)}\r\n                    />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n                <label style={{paddingTop:\"8px\"}} htmlFor=\"price\">Purchase Date: </label>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                    <KeyboardDatePicker\r\n                    value={startDate}\r\n                    onChange={handleStartDateChange}\r\n                    format=\"yyyy-MM-dd\"\r\n                    />\r\n\r\n                </MuiPickersUtilsProvider> \r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n                <label style={{paddingTop:\"8px\"}} htmlFor=\"price\">Expiration Date: </label>\r\n            </Grid>\r\n             \r\n            <Grid item xs={12} sm={8}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                    <KeyboardDatePicker\r\n                    value={endDate}\r\n                    minDate={startDate}\r\n                    onChange={handleEndDateChange}\r\n                    format=\"yyyy-MM-dd\"\r\n                    />\r\n\r\n                </MuiPickersUtilsProvider> \r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={12}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => handleAdd()}>\r\n                    Add\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n          \r\n        </div>\r\n      );\r\n\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {modalBody}\r\n      </Modal>\r\n    )\r\n}","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\Payments.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\VerifyPaymentDialog.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\RentalsHistoryPage.js",["553"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Loading from \"../../components/Loading\";\r\nimport VehicleService from \"../../services/vehicle.service\";\r\nimport VehicleRentalHistoryModal from \"./VehicleRentalHistoryModal\";\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n  });\r\n  \r\n  function Row(props) {\r\n    const { vehicle } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useRowStyles();\r\n    const [historyModalisOpen, setHistoryModalIsOpen] = useState(false);\r\n    const [vehicleId, setVehicleId] = useState('');\r\n  \r\n    return (\r\n      \r\n\r\n      <React.Fragment>\r\n        <TableRow className={classes.root} >\r\n          <TableCell style={{width:\"60px\"}}>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell >\r\n          <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n            <strong>ID: </strong>{vehicle.id}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n            <strong>Brand: </strong>{vehicle.brand}\r\n          </TableCell>\r\n          <TableCell align=\"left\"  >\r\n            <strong>Model: </strong>{vehicle.model}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n          <strong>Category: </strong>{vehicle.category}\r\n          </TableCell>\r\n          <TableCell align=\"right\" >\r\n          <strong>Price: </strong>{vehicle.price.toFixed(2)}PLN\r\n          </TableCell>\r\n          <TableCell style={{  padding: 0 }} align=\"right\">\r\n                <IconButton aria-label=\"edit\" className={classes.margin} onClick={()=>{\r\n                  setHistoryModalIsOpen(true);\r\n                  setVehicleId(vehicle.id);\r\n                }}>\r\n                  <VisibilityIcon />\r\n                </IconButton>\r\n                \r\n          </TableCell>\r\n        </TableRow>\r\n\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Details</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n  \r\n                  <TableBody>\r\n                    <TableRow>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><img style={{width:\"10rem\"}} src={vehicle.pictureUrl} alt=\"Vehicle\" title={vehicle.pictureUrl} /></TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Production country:</strong><br />{vehicle.country}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Production year:</strong><br />{vehicle.yearOfProduction}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Power:</strong><br />{vehicle.power}HP</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"right\"><strong>Description:</strong><br /> {vehicle.description}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n\r\n        {historyModalisOpen && (\r\n        <VehicleRentalHistoryModal open={historyModalisOpen} setOpen={setHistoryModalIsOpen} vehicleId={vehicleId} />\r\n      )}\r\n  \r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const RentalsHistoryPage = () => {\r\n    const [vehicles, setVehicles] = useState([])\r\n    const [loading, setLoading]= useState(true)\r\n    const [message, setMessage] = useState(\"No FAQs here\")\r\n    const [vehicle, setVehicle] = useState(null);\r\n\r\n    //const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [editVehicleOpen, setEditVehicleOpen] = useState(false);\r\n\r\n    const fetchVehicles = () =>{\r\n      VehicleService.getVehicles().then((response)=>{\r\n        setVehicles(response);\r\n        console.log(response);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) =>{\r\n        console.log(err);\r\n        setMessage(\"Connection error\")\r\n        setLoading(false);\r\n    }) \r\n    }\r\n    useEffect(() => {\r\n      fetchVehicles();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      fetchVehicles();\r\n    }, [editVehicleOpen])\r\n\r\n    if(loading){\r\n      return(\r\n          <div className='container'>\r\n              <Loading type='bars' color='grey' />\r\n          </div>\r\n      )\r\n  }\r\n  if(vehicles.length === 0){\r\n    return(\r\n        <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n            <h2>{message}</h2>\r\n        </header>\r\n        </div>\r\n    )\r\n}\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"container\">\r\n\r\n      {/* {dialogOpen && (\r\n        <DeleteFaqDialog\r\n              faqId={FAQID}\r\n              setOpen={setDialogOpen}\r\n              open={dialogOpen}\r\n          />\r\n      )} */}\r\n\r\n\r\n      <header className=\"jumbotron\">\r\n        <h3>Vehicles rental history</h3>\r\n      </header>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableBody>\r\n            {vehicles.map((vehicle) => (\r\n              <Row key={vehicle.id} vehicle={vehicle} setVehicle={setVehicle} setEditVehicleOpen={setEditVehicleOpen}/>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default RentalsHistoryPage;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\manager\\VehicleRentalHistoryModal.js",["554","555"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport VehicleService from \"../../services/vehicle.service\";\r\nimport { format } from \"date-fns\";\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n        position:'absolute',\r\n        //width:'90%',\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        //overflow:'scroll',\r\n        // height:'90%',\r\n        display:'block',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\npaper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n},\r\nroot: {\r\n    display: 'flex',\r\n},\r\nformControl: {\r\n    margin: theme.spacing(3),\r\n},\r\n}));\r\n\r\nconst EditVehicleModal = (props) => {\r\n    const vehicleId = props.vehicleId;\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [rentals, setRentals] = useState([]);\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(vehicleId);\r\n        VehicleService.getRentalHistory(vehicleId).then(\r\n            (response)=>{\r\n                console.log(response);\r\n                setRentals(response.rentals);\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        )\r\n      }, [])\r\n\r\nconst modalBody = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n        <TableContainer component={Paper}>\r\n            <Table  aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell align=\"right\">Start Date</TableCell>\r\n                        <TableCell align=\"right\">End Date</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                {rentals.map((rental) => (\r\n                    <TableRow key={rental.id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {rental.id}  \r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{format(new Date(rental.startDate), \"yyyy-MM-dd\")}</TableCell>\r\n                        <TableCell align=\"right\">{format(new Date(rental.endDate), \"yyyy-MM-dd\")}</TableCell>\r\n                        <TableCell align=\"right\">{rental.cost.toFixed(2)}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody> \r\n\r\n            </Table>\r\n        </TableContainer>\r\n    </div>\r\n);\r\n\r\n\r\nreturn(\r\n    <Modal\r\n    open={props.open}\r\n    onClose={handleClose}\r\n    aria-labelledby=\"simple-modal-title\"\r\n    aria-describedby=\"simple-modal-description\"\r\n    >\r\n    {modalBody}\r\n</Modal>\r\n);\r\n    \r\n  \r\n};\r\n\r\nexport default EditVehicleModal;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\UserOrdersPage.js",["556","557","558","559","560","561","562","563","564"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Loading from \"../../components/Loading\";\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { format } from \"date-fns\";\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport AddComplaintModal from \"./AddComplaintModal\";\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n  });\r\n  \r\n  function Row(props) {\r\n    const { order } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useRowStyles();\r\n    const [historyModalisOpen, setHistoryModalIsOpen] = useState(false);\r\n    const [vehicleId, setVehicleId] = useState('');\r\n  \r\n    return (\r\n\r\n      <React.Fragment >\r\n         <TableRow className={classes.root} >\r\n          <TableCell style={{width:\"60px\"}}>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell >\r\n          <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n            <strong>ID: </strong>{order.id}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n            <strong>Order Date: </strong>{format(new Date(order.date), \"yyyy-MM-dd\")}\r\n          </TableCell>\r\n          <TableCell align=\"right\" >\r\n          <strong>Total Cost: </strong>{order.cost.toFixed(2)}PLN\r\n          </TableCell>\r\n        </TableRow>\r\n\r\n        <TableRow >\r\n          <TableCell  colSpan={10} style={{paddingBottom: 0, paddingTop: 0, backgroundColor:\"rgba(122,121,122, 0.1)\"}}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1} >\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow >\r\n                    <TableCell style={{borderBottom: '1px solid black'}}>Pos.</TableCell>\r\n                      <TableCell colSpan={4} style={{borderBottom: '1px solid black'}}>Details</TableCell>\r\n                      <TableCell style={{borderBottom: '1px solid black'}} align=\"right\">Complaint</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n  \r\n                  <TableBody >\r\n                    {order.rentals.map((rental, index)=>(\r\n                      <TableRow >\r\n                            {/* <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><img style={{width:\"10rem\"}} src={vehicle.pictureUrl} alt=\"Vehicle\" title={vehicle.pictureUrl} /></TableCell> */}\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{index+1}</strong></TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Brand:</strong><br />{rental.brand}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Model:</strong><br />{rental.model}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Period:</strong><br />{rental.startDate} - {rental.endDate}</TableCell>\r\n                            \r\n\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"right\"><strong>Cost:</strong><br /> {rental.resPrice.toFixed(2)}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\", width:\"50px\"}} align=\"right\">\r\n                              <IconButton onClick={()=> {\r\n                                props.setAddComplaintModelOpen(true);\r\n                                props.setRentalId(rental.id);\r\n                              }}>\r\n                                <ErrorIcon style={{color:\"red\"}} />\r\n                              </IconButton>\r\n                            </TableCell>\r\n\r\n                      </TableRow>\r\n                    ))}\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow> \r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const UserOrdersPage = () => {\r\n    const [orders, setOrders] = useState([])\r\n    const [loading, setLoading]= useState(true)\r\n    const [message, setMessage] = useState(\"No FAQs here\")\r\n    const [vehicle, setVehicle] = useState(null);\r\n    const [addModalOpen, setAddComplaintModelOpen] = useState(false);\r\n    const [rentalId, setRentalId] = useState('');\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    //const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [editVehicleOpen, setEditVehicleOpen] = useState(false);\r\n\r\n    const fetchOrders = () =>{\r\n      console.log(user.idCustomer);\r\n      UserService.getUserOrders(user.idCustomer).then((response)=>{\r\n        setOrders(response);\r\n        console.log(response);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) =>{\r\n        console.log(err);\r\n        setMessage(\"Connection error\")\r\n        setLoading(false);\r\n    }) \r\n    }\r\n    useEffect(() => {\r\n      fetchOrders();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      fetchOrders();\r\n    }, [editVehicleOpen])\r\n\r\n    if(loading){\r\n      return(\r\n          <div className='container'>\r\n              <Loading type='bars' color='grey' />\r\n          </div>\r\n      )\r\n  }\r\n  if(orders.length === 0){\r\n    return(\r\n        <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n            <h2>{message}</h2>\r\n        </header>\r\n        </div>\r\n    )\r\n}\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"container\">\r\n\r\n      {/* {dialogOpen && (\r\n        <DeleteFaqDialog\r\n              faqId={FAQID}\r\n              setOpen={setDialogOpen}\r\n              open={dialogOpen}\r\n          />\r\n      )} */}\r\n\r\n\r\n      <header className=\"jumbotron\">\r\n        <h3>Your orders</h3>\r\n      </header>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <Row  key={order.id} order={order} setAddComplaintModelOpen={setAddComplaintModelOpen} setRentalId={setRentalId} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n        \r\n        {addModalOpen && (\r\n          <AddComplaintModal open={addModalOpen} setOpen={setAddComplaintModelOpen} rentalId={rentalId}/>\r\n        )}\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default UserOrdersPage;","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\components\\VehicleComments.js",["565","566","567","568"],"import React, { useEffect, useState } from 'react'\r\nimport 'date-fns';\r\nimport { format } from \"date-fns\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport VehicleService from \"../services/vehicle.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\n\r\nconst VehicleComments = (props) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [userComment, setUserComment] = useState(\"\");\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    const fetchComments = () =>{\r\n        VehicleService.getVehicleComments(props.vehicleId).then(\r\n            (response) => {\r\n                console.log(response);\r\n                setComments(response);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchComments();\r\n    }, [])\r\n\r\n    const handleComment = (e) => {\r\n        setUserComment(e.target.value);\r\n    }\r\n    const handlePostComment = (e) =>{\r\n        const comment = {vehicleId:props.vehicleId, customerUsername: user.username, message:userComment};\r\n        UserService.postUserComment(comment).then(\r\n            (response)=>{\r\n                console.log(response);\r\n                fetchComments();\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        )\r\n        console.log(\"Dodawanie komentarza\");\r\n        console.log(user.username);\r\n        setUserComment(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Comments</h1>\r\n            <br />\r\n            <Paper justify=\"space-between\" style={{ padding: \"10px 20px 40px 20px\" }}>\r\n\r\n            {user !== null && (\r\n                <div>\r\n                <h5>Add your comment</h5>\r\n                <TextareaAutosize onChange={handleComment} style={{ width: \"100%\", paddingLeft: \"5px\" }} rowsMin=\"5\" />\r\n                <Button style={{float:\"right\"}} variant=\"contained\" color=\"primary\" onClick={handlePostComment} >\r\n                    Post comment\r\n                </Button>\r\n                </div>\r\n            )}\r\n                \r\n                {comments.map((comment) => (\r\n                    <React.Fragment>\r\n                        <Grid container wrap=\"nowrap\" spacing={2} style={{ paddingTop: \"20px\" }}>\r\n                            <Grid item>\r\n                                <Avatar alt=\"Profile pic\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\r\n                            </Grid>\r\n                            <Grid justifyContent=\"left\" item xs zeroMinWidth>\r\n                                <h5 style={{ margin: 0, textAlign: \"left\" }}>{comment.customerUsername}</h5>\r\n                                <p style={{ textAlign: \"left\", paddingLeft: \"20px\" }}>\r\n                                    {comment.message}\r\n                                </p>\r\n                                <p style={{ fontSize: \"small\", textAlign: \"right\", color: \"gray\" }}>\r\n                                    posted {format(new Date(comment.date), \"yyyy-MM-dd, HH:mm:ss\")}\r\n                                 </p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider variant=\"fullWidth\" style={{ margin: 0 }} />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\nexport default VehicleComments;",["569","570"],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\Offers.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\AddOfferModal.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\user\\AddComplaintModal.js",["571"],"import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport UserService from \"../../services/user.service\";\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nexport default function AddComplaintModal(props){\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [helpText, setHelpText] = React.useState(\"Describe your problem please\");\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n    const [complaint, setComplaint] = useState(\"\");\r\n\r\n    const onChangeComplaint = (e) =>{\r\n      const q = e.target.value;\r\n      setComplaint(q);\r\n    }\r\n\r\n    const handleAddComplaint = () =>{\r\n        if(complaint === \"\"){\r\n            setHelpText(\"Field can't be empty!\");\r\n            return;\r\n        }\r\n        UserService.addComplaint(props.rentalId, complaint).then(\r\n          (response)=>{\r\n            console.log(response);\r\n            window.alert(\"New complaint created\");\r\n          },\r\n          (error)=>{\r\n            console.log(error);\r\n          }\r\n        )\r\n        props.setOpen(false);\r\n      }\r\n\r\n      const handleClose = () => {\r\n        props.setOpen(false);\r\n      };\r\n    \r\n      const modalBody = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Create complaint for rental #{props.rentalId}</h2>\r\n          \r\n          <TextareaAutosize placeholder={helpText} id=\"standard-basic\" style={{ width: \"100%\", paddingLeft: \"5px\", border:\"1px solid black\" }} rowsMin=\"5\" onChange={onChangeComplaint}/>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => handleAddComplaint()}>\r\n            Make a complain\r\n          </Button>\r\n          \r\n        </div>\r\n      );\r\n\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {modalBody}\r\n      </Modal>\r\n    )\r\n}","D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\ComplaintsList.js",[],"D:\\Workspaces\\React\\Wypozyczalnia\\wypozyczalnia\\src\\pages\\employee\\RemoveComplainDialog.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\index.js",[],["572","573"],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\i18n.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\reportWebVitals.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\App.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Navbar.js",["574"],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Vehicles.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Profile.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\SingleVehiclePage.js",["575","576","577"],"import React, { useEffect, useState } from 'react'\r\nimport 'date-fns';\r\nimport { format } from \"date-fns\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport VehicleService from \"../services/vehicle.service\"\r\nimport Button from '@material-ui/core/Button';\r\nimport VehicleComments from \"../components/VehicleComments\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst SingleVehiclePage = () => {\r\n  const { t } = useTranslation('navbar');\r\n  const vehicle = JSON.parse(sessionStorage.getItem(\"vehicle\"));\r\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n  // const [startDate, setStartDate] = useState(format(new Date(), \"yyyy-MM-dd\"));\r\n  // const [endDate, setEndDate] = useState(format(new Date(), \"yyyy-MM-dd\"));\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const [resPrice, setResPrice] = useState(vehicle.price);\r\n\r\n  const [dates, setDates] = useState([]);\r\n\r\n  const [cart, setCart] = useState(JSON.parse(sessionStorage.getItem(\"cart\")));\r\n\r\n  const cartItem = {\r\n    id: vehicle.id,\r\n    brand: vehicle.brand,\r\n    model: vehicle.model,\r\n    startDate,\r\n    endDate,\r\n    resPrice,\r\n  };\r\n  const countPrice = () => {\r\n    var Difference_In_Time = endDate.getTime() - startDate.getTime();\r\n    var Difference_In_Days = Math.round(Difference_In_Time / (1000 * 3600 * 24));\r\n    setResPrice((Difference_In_Days + 1) * vehicle.price);\r\n  }\r\n\r\n  useEffect(() => {\r\n    countPrice();\r\n  }, [startDate, endDate]);\r\n\r\n  const handleStartDateChange = (date) => {\r\n    setStartDate(date);\r\n    if(endDate < date){\r\n      setEndDate(date);\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (date) => {\r\n    setEndDate(date);\r\n  };\r\n\r\n  const [status, setStatus] = useState(false);\r\n  const fetchStatus = () =>{\r\n    CustomerService.getLicenseVerificationStatus(user.idCustomer).then(\r\n      (response) => {\r\n        console.log(response);\r\n        setStatus(response.status);\r\n      },\r\n      (error)=>{\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    VehicleService.getReservationDates(vehicle.id).then(\r\n      (response) => {\r\n        setDates(response);\r\n        console.log(\"Basket: \");\r\n        console.log(cart);\r\n        console.log(\"Actual cart item: \");\r\n        console.log(cartItem);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      if(user !== null){\r\n        fetchStatus();\r\n      }\r\n  }, [])\r\n\r\n  function filterDates(date) {\r\n    const found = dates.find(res => res.startDate <= format(date, \"yyyy-MM-dd\") && res.endDate >= format(date, \"yyyy-MM-dd\"))\r\n    if (found === undefined) {\r\n      return false;\r\n    }\r\n    else return true;\r\n  }\r\n\r\n  function filterEndDates(date) {\r\n    const found = dates.find(res => (res.startDate <= format(date, \"yyyy-MM-dd\")\r\n      && res.endDate >= format(date, \"yyyy-MM-dd\"))\r\n      || (format(date, \"yyyy-MM-dd\") >= res.startDate && res.startDate > format(startDate, \"yyyy-MM-dd\")));\r\n    if (found === undefined) {\r\n      return false;\r\n    }\r\n    else return true;\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n\r\n    //console.log(\"Day diff: \");\r\n    //countPrice();\r\n    console.log(\"adding to cart\");\r\n    if (cart.length === 0) {\r\n      console.log(\"Cart was empty\");\r\n      cart.push(cartItem);\r\n      console.log(cart);\r\n\r\n    }\r\n    else {\r\n      console.log(\"Cart existed: \");\r\n      const found = cart.find(item => (item.id === cartItem.id));\r\n      if(found !== undefined){\r\n        window.alert(t('vehicle-in-cart'));\r\n        return;\r\n      }\r\n      cart.push(cartItem);\r\n      console.log(cart);\r\n    }\r\n    sessionStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    window.location.reload(false);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\" style={{ paddingBottom: \"50px\" }}>\r\n      <header className=\"jumbotron\" style={{ paddingBottom: \"20px\", paddingTop: \"30px\", marginBottom: \"5px\" }}>\r\n        <h3>{vehicle.brand} {vehicle.model}</h3>\r\n\r\n      </header>\r\n\r\n      {/* <img className=\"w-100\" src={vehicle.pictureUrl} title={vehicle.pictureUrl} alt={vehicle.pictureUrl} /> */}\r\n      <div className=\"row\" style={{ margin: 0 }}>\r\n        <div className=\"col-lg-6\" style={{ padding: 0 }}><img className=\"w-100\" style={{ minWidth: \"450px\" }} src={vehicle.pictureUrl} title={vehicle.pictureUrl} alt={vehicle.pictureUrl} /></div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"row\">\r\n          \r\n\r\n            <div className=\"col h3\"><strong>{t('brand')}: </strong></div>\r\n            <div className=\"col h3\" style={{textAlign:\"right\"}}>{vehicle.brand}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col h4\"><strong>Model: </strong></div>\r\n            <div className=\"col h4\" style={{textAlign:\"right\"}}>{vehicle.model}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>{t('power')}: </strong></div>\r\n            <div className=\"col\" style={{textAlign:\"right\"}}>{vehicle.power}{t('hp')}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>{t('prod-country')}: </strong></div>\r\n            <div className=\"col\" style={{textAlign:\"right\"}}>{vehicle.country}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>{t('prod-year')}: </strong></div>\r\n            <div className=\"col\" style={{textAlign:\"right\"}}>{vehicle.yearOfProduction}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>{t('category')}: </strong></div>\r\n            <div className=\"col\" style={{textAlign:\"right\"}}>{vehicle.category}</div>\r\n          </div>\r\n          <hr style={{margin:0}}></hr>\r\n\r\n          <br />\r\n          <br />\r\n          <p style={{margin:0, color:\"rgb(51, 77, 77)\"}}><i>{t('reservation')}</i> </p>\r\n          <hr style={{margin:0}}></hr>\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>{t('start-date')}: </strong></div>\r\n            <div className=\"col\">\r\n\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                <KeyboardDatePicker\r\n                  value={startDate}\r\n                  minDate={startDate}\r\n                  onChange={handleStartDateChange}\r\n                  format=\"yyyy-MM-dd\"\r\n                  shouldDisableDate={filterDates}\r\n                />\r\n\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>{t('end-date')}: </strong></div>\r\n            <div className=\"col\">\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                <KeyboardDatePicker\r\n                  value={endDate}\r\n                  onChange={handleEndDateChange}\r\n                  format=\"yyyy-MM-dd\"\r\n                  shouldDisableDate={filterEndDates}\r\n                  minDate={startDate}\r\n                />\r\n\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\"><strong>{t('price')}: </strong></div>\r\n            <div className=\"col\">{resPrice.toFixed(2)} PLN</div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      {user !== null && user.roles.includes(\"ROLE_USER\") && resPrice>0 && status && (\r\n        <div className=\"row\" style={{margin:0}}>\r\n        <Button style={{ marginLeft: \"auto\", marginTop:\"20px\" }} variant=\"contained\" color=\"primary\" onClick={handleAddToCart}>\r\n        {t('add-to-cart')}\r\n        </Button>\r\n      </div>\r\n      )} \r\n      \r\n      <br />\r\n      <VehicleComments vehicleId={vehicle.id} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleVehiclePage;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\FAQ.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Home.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Login.js",["578"],"import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const { t } = useTranslation('navbar');\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const required = (value) => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {t('field-cant-be-empty')}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(t('incorrect-username-or-pass'));\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">{t('username')}</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">{t('password')}</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\CartPage.js",["579"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { format } from \"date-fns\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkout from \"./user/checkout/Checkout\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst CartPage = () => {\r\n  const { t } = useTranslation('navbar');\r\n  const [cart, setCart] = useState(JSON.parse(sessionStorage.getItem(\"cart\")));\r\n  const [payButtonClicked, setPayButtonClicked] = useState(false);\r\n  \r\n  const cartTotal = cart.reduce((total, { resPrice = 0 }) => total + resPrice, 0);\r\n\r\n  const removeFromCart = (item) => {\r\n    console.log(\"removing: \" + item.id);\r\n    setCart((currentCart) => {\r\n      const indexOfItemToRemove = currentCart.findIndex((cartItem) => cartItem.id === item.id);\r\n      console.log(indexOfItemToRemove);\r\n      if (indexOfItemToRemove === -1) {\r\n        return currentCart;\r\n      }\r\n      const newCart = [...currentCart.slice(0, indexOfItemToRemove),\r\n        ...currentCart.slice(indexOfItemToRemove + 1),]\r\n        console.log(\"cart after delete: \");\r\n        console.log(newCart);\r\n        sessionStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n        window.location.reload(false);\r\n      return newCart;\r\n    });\r\n  };\r\n\r\n  const handlePay = () =>{\r\n    setPayButtonClicked(true);\r\n  }\r\n\r\n  if(payButtonClicked){\r\n    return(\r\n      <Checkout />\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\" style={{paddingBottom:\"20px\", paddingTop:\"30px\", marginBottom:\"5px\"}}>\r\n      <h3>{t('ready-to-reserve')}</h3>\r\n\r\n      </header>\r\n\r\n        <TableContainer component={Paper}>\r\n        <Table  aria-label=\"simple table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>{t('brand')}</TableCell>\r\n                <TableCell align=\"right\">Model</TableCell>\r\n                <TableCell align=\"right\">{t('start-date')}</TableCell>\r\n                <TableCell align=\"right\">{t('end-date')}</TableCell>\r\n                <TableCell align=\"right\">{t('price')}</TableCell>\r\n                <TableCell align=\"right\">{t('action')}</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {cart.map((vehicle, index) => (\r\n                <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {vehicle.brand}{vehicle.id}  \r\n                </TableCell>\r\n                <TableCell align=\"right\">{vehicle.model}</TableCell>\r\n                <TableCell align=\"right\">{format(new Date(vehicle.startDate), \"yyyy-MM-dd\")}</TableCell>\r\n                <TableCell align=\"right\">{format(new Date(vehicle.endDate), \"yyyy-MM-dd\")}</TableCell>\r\n                <TableCell align=\"right\">{vehicle.resPrice.toFixed(2)}</TableCell>\r\n\r\n\r\n                {/* <TableCell align=\"right\">{format(new Date(vehicle.endDate), \"yyyy-MM-dd\")}</TableCell>\r\n                <TableCell align=\"right\">{format(vehicle.endDate, \"yyyy-MM-dd\")}</TableCell> */}\r\n\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"delete\" onClick={() => removeFromCart(vehicle)}>\r\n                            <DeleteIcon />\r\n                    </IconButton>\r\n                </TableCell>\r\n                </TableRow>\r\n            ))}\r\n            <TableRow >\r\n                <TableCell  colSpan={5} align=\"right\">{t('order-total')}: <strong>{cartTotal}.00PLN</strong></TableCell>\r\n\r\n            </TableRow>\r\n            </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        <div className=\"row\" style={{margin:0}}>\r\n          <Button style={{ marginLeft:\"auto\", width:\"16%\", marginTop:\"5px\", marginBottom:\"10px\"}} variant=\"contained\" color=\"primary\" onClick={()=> handlePay()}>\r\n          {t('pay')}\r\n          </Button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\BoardUser.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\Register.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\EditFaq.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\ManageVehiclesBoard.js",["580"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Loading from \"../../components/Loading\";\r\nimport VehicleService from \"../../services/vehicle.service\";\r\nimport EditVehicleModal from \"./EditVehicleModal\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n  });\r\n  \r\n  function Row(props) {\r\n  const { t } = useTranslation('navbar');\r\n\r\n    const { vehicle } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useRowStyles();\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <TableRow className={classes.root} >\r\n          <TableCell style={{width:\"60px\"}}>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell >\r\n          <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n            <strong>ID: </strong>{vehicle.id}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n            <strong>{t('brand')}: </strong>{vehicle.brand}\r\n          </TableCell>\r\n          <TableCell align=\"left\"  >\r\n            <strong>Model: </strong>{vehicle.model}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n          <strong>{t('category')}: </strong>{vehicle.category}\r\n          </TableCell>\r\n          <TableCell align=\"right\" >\r\n          <strong>{t('price')}: </strong>{vehicle.price}PLN\r\n          </TableCell>\r\n          <TableCell style={{  padding: 0 }} align=\"right\">\r\n                <IconButton aria-label=\"edit\" className={classes.margin} onClick={()=>{\r\n                  props.setEditVehicleOpen(true);\r\n                  props.setVehicle(vehicle);\r\n                }\r\n                }>\r\n                          <EditIcon />\r\n                </IconButton>\r\n                {/* <IconButton aria-label=\"delete\" className={classes.margin}>\r\n                          <DeleteIcon />\r\n                </IconButton> */}\r\n          </TableCell>\r\n        </TableRow>\r\n\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>{t('details')}</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n  \r\n                  <TableBody>\r\n                    <TableRow>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><img style={{width:\"10rem\"}} src={vehicle.pictureUrl} alt=\"Vehicle\" title={vehicle.pictureUrl} /></TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{t('prod-country')}:</strong><br />{vehicle.country}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{t('prod-year')}:</strong><br />{vehicle.yearOfProduction}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{t('power')}:</strong><br />{vehicle.power}HP</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"right\"><strong>{t('description')}:</strong><br /> {vehicle.description}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n  \r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const ManageVehicleBoard = () => {\r\n  const { t } = useTranslation('navbar');\r\n\r\n    const [vehicles, setVehicles] = useState([])\r\n    const [loading, setLoading]= useState(true)\r\n    const [message, setMessage] = useState(t('no-vehicles'))\r\n    const [vehicle, setVehicle] = useState(null);\r\n\r\n    //const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [editVehicleOpen, setEditVehicleOpen] = useState(false);\r\n\r\n    const fetchVehicles = () =>{\r\n      VehicleService.getVehicles().then((response)=>{\r\n        setVehicles(response);\r\n        console.log(response);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) =>{\r\n        console.log(err);\r\n        setMessage(\"Connection error\")\r\n        setLoading(false);\r\n    }) \r\n    }\r\n    useEffect(() => {\r\n      fetchVehicles();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      fetchVehicles();\r\n    }, [editVehicleOpen])\r\n\r\n    if(loading){\r\n      return(\r\n          <div className='container'>\r\n              <Loading type='bars' color='grey' />\r\n          </div>\r\n      )\r\n  }\r\n  if(vehicles.length === 0){\r\n    return(\r\n        <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n            <h2>{message}</h2>\r\n        </header>\r\n        </div>\r\n    )\r\n}\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"container\">\r\n\r\n      {/* {dialogOpen && (\r\n        <DeleteFaqDialog\r\n              faqId={FAQID}\r\n              setOpen={setDialogOpen}\r\n              open={dialogOpen}\r\n          />\r\n      )} */}\r\n          \r\n      {editVehicleOpen && (\r\n        <EditVehicleModal \r\n            setOpen={setEditVehicleOpen}\r\n            open={editVehicleOpen}\r\n            vehicle={vehicle}\r\n        />\r\n      )} \r\n\r\n      <header className=\"jumbotron\">\r\n        <h3>{t('edit-vehicle')}</h3>\r\n      </header>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableBody>\r\n            {vehicles.map((vehicle) => (\r\n              <Row key={vehicle.id} vehicle={vehicle} setVehicle={setVehicle} setEditVehicleOpen={setEditVehicleOpen}/>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ManageVehicleBoard;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\Payments.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\DriverLicenses.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\CarFeeList.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\ComplaintsList.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\Offers.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\UserOrdersPage.js",["581","582","583","584","585","586","587","588","589"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Loading from \"../../components/Loading\";\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { format } from \"date-fns\";\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport AddComplaintModal from \"./AddComplaintModal\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n  });\r\n  \r\n  function Row(props) {\r\n    const { t } = useTranslation('navbar');\r\n    const { order } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useRowStyles();\r\n    const [historyModalisOpen, setHistoryModalIsOpen] = useState(false);\r\n    const [vehicleId, setVehicleId] = useState('');\r\n  \r\n    return (\r\n\r\n      <React.Fragment >\r\n         <TableRow className={classes.root} >\r\n          <TableCell style={{width:\"60px\"}}>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell >\r\n          <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n            <strong>ID: </strong>{order.id}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n            <strong>{t('order-date')}: </strong>{format(new Date(order.date), \"yyyy-MM-dd\")}\r\n          </TableCell>\r\n          <TableCell align=\"right\" >\r\n          <strong>{t('total-cost')}: </strong>{order.cost.toFixed(2)}PLN\r\n          </TableCell>\r\n        </TableRow>\r\n\r\n        <TableRow >\r\n          <TableCell  colSpan={10} style={{paddingBottom: 0, paddingTop: 0, backgroundColor:\"rgba(122,121,122, 0.1)\"}}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1} >\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow >\r\n                    <TableCell style={{borderBottom: '1px solid black'}}>Pos.</TableCell>\r\n                      <TableCell colSpan={4} style={{borderBottom: '1px solid black'}}>{t('details')}</TableCell>\r\n                      <TableCell style={{borderBottom: '1px solid black'}} align=\"right\">{t('complaint')}</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n  \r\n                  <TableBody >\r\n                    {order.rentals.map((rental, index)=>(\r\n                      <TableRow >\r\n                            {/* <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><img style={{width:\"10rem\"}} src={vehicle.pictureUrl} alt=\"Vehicle\" title={vehicle.pictureUrl} /></TableCell> */}\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{index+1}</strong></TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{t('brand')}:</strong><br />{rental.brand}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>Model:</strong><br />{rental.model}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{t('period')}:</strong><br />{rental.startDate} - {rental.endDate}</TableCell>\r\n                            \r\n\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"right\"><strong>{t('cost')}:</strong><br /> {rental.resPrice.toFixed(2)}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\", width:\"50px\"}} align=\"right\">\r\n                              <IconButton onClick={()=> {\r\n                                props.setAddComplaintModelOpen(true);\r\n                                props.setRentalId(rental.id);\r\n                              }}>\r\n                                <ErrorIcon style={{color:\"red\"}} />\r\n                              </IconButton>\r\n                            </TableCell>\r\n\r\n                      </TableRow>\r\n                    ))}\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow> \r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const UserOrdersPage = () => {\r\n    const { t } = useTranslation('navbar');\r\n    const [orders, setOrders] = useState([])\r\n    const [loading, setLoading]= useState(true)\r\n    const [message, setMessage] = useState(t('no-orders'))\r\n    const [vehicle, setVehicle] = useState(null);\r\n    const [addModalOpen, setAddComplaintModelOpen] = useState(false);\r\n    const [rentalId, setRentalId] = useState('');\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    //const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [editVehicleOpen, setEditVehicleOpen] = useState(false);\r\n\r\n    const fetchOrders = () =>{\r\n      console.log(user.idCustomer);\r\n      UserService.getUserOrders(user.idCustomer).then((response)=>{\r\n        setOrders(response);\r\n        console.log(response);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) =>{\r\n        console.log(err);\r\n        setMessage(\"Connection error\")\r\n        setLoading(false);\r\n    }) \r\n    }\r\n    useEffect(() => {\r\n      fetchOrders();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      fetchOrders();\r\n    }, [editVehicleOpen])\r\n\r\n    if(loading){\r\n      return(\r\n          <div className='container'>\r\n              <Loading type='bars' color='grey' />\r\n          </div>\r\n      )\r\n  }\r\n  if(orders.length === 0){\r\n    return(\r\n        <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n            <h2>{message}</h2>\r\n        </header>\r\n        </div>\r\n    )\r\n}\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"container\">\r\n\r\n      {/* {dialogOpen && (\r\n        <DeleteFaqDialog\r\n              faqId={FAQID}\r\n              setOpen={setDialogOpen}\r\n              open={dialogOpen}\r\n          />\r\n      )} */}\r\n\r\n\r\n      <header className=\"jumbotron\">\r\n        <h3>{t('your-orders')}</h3>\r\n      </header>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <Row  key={order.id} order={order} setAddComplaintModelOpen={setAddComplaintModelOpen} setRentalId={setRentalId} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n        \r\n        {addModalOpen && (\r\n          <AddComplaintModal open={addModalOpen} setOpen={setAddComplaintModelOpen} rentalId={rentalId}/>\r\n        )}\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default UserOrdersPage;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\UserDrivingLicense.js",["590"],"import React, { useState, useEffect } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddLicenseModal from \"./AddLicenseModal\";\r\nimport CustomerService from \"../../services/customer.service\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    control: {\r\n      padding: theme.spacing(2)\r\n    }\r\n  }));\r\n\r\nconst UserDrivingLicense = () => {\r\n    const { t } = useTranslation('navbar');\r\n    const user= AuthService.getCurrentUser();\r\n    const classes = useStyles();\r\n    const [licenseModalOpen, setOpenAddLicenseModal] = useState(false);\r\n    const [licenseNumber, setLicenseNumber] = useState(false);\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const fetchLicense = () =>{\r\n      CustomerService.getCustomerDriverLicense(user.idCustomer).then(\r\n        (response) => {\r\n          console.log(response.idCustomer);\r\n          setLicenseNumber(response.idCustomer);\r\n        },\r\n        (error)=>{\r\n          console.log(error);\r\n        }\r\n      )\r\n    }\r\n    const fetchStatus = () =>{\r\n      CustomerService.getLicenseVerificationStatus(user.idCustomer).then(\r\n        (response) => {\r\n          console.log(response);\r\n          setStatus(response.status);\r\n        },\r\n        (error)=>{\r\n          console.log(error);\r\n        }\r\n      )\r\n    }\r\n\r\n    useEffect(()=>{\r\n      fetchLicense();\r\n      fetchStatus();\r\n    }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{t('your-driving-license')}</h3>\r\n      </header>\r\n\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Paper className={classes.paper}>\r\n                  <ul style={{listStyleType:\"none\"}}>\r\n                      <li style={licenseNumber ? {} : { color: \"red\" }} ><strong>{t('license-num')}:</strong> {licenseNumber ? licenseNumber: \"EMPTY\"}</li>\r\n                      <li><strong>{t('name')}:</strong> {user.firstName}</li>\r\n                      <li><strong>{t('last-name')}: </strong>{user.lastName}</li>\r\n                      <li><strong>{t('adress')}: </strong>{user.address}</li>\r\n                      <li><strong>{t('city')}: </strong>{user.city}</li>\r\n                      <li><strong>{t('country')}: </strong>{user.country}</li>\r\n                      <li style={status ? {color: \"green\"} : { color: \"red\" }} ><strong>Status:</strong> {status ? t('verified'): t('not') + ' ' + t('verified')}</li>\r\n\r\n                  </ul>\r\n                    {!licenseNumber && \r\n                      <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                        setOpenAddLicenseModal(true);\r\n                    }}>\r\n                        {t('add-license')}\r\n                    </Button>\r\n                    }\r\n                    \r\n              </Paper>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {licenseModalOpen && (\r\n        <AddLicenseModal \r\n            setOpen={setOpenAddLicenseModal}\r\n            open={licenseModalOpen}\r\n            setLicenseNumber={setLicenseNumber}\r\n        />\r\n      )}\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDrivingLicense;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\manager\\RentalsHistoryPage.js",["591"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Loading from \"../../components/Loading\";\r\nimport VehicleService from \"../../services/vehicle.service\";\r\nimport VehicleRentalHistoryModal from \"./VehicleRentalHistoryModal\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n  });\r\n  \r\n  function Row(props) {\r\n    const { t } = useTranslation('navbar');\r\n    const { vehicle } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useRowStyles();\r\n    const [historyModalisOpen, setHistoryModalIsOpen] = useState(false);\r\n    const [vehicleId, setVehicleId] = useState('');\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <TableRow className={classes.root} >\r\n          <TableCell style={{width:\"60px\"}}>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell >\r\n          <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n            <strong>ID: </strong>{vehicle.id}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n            <strong>{t('brand')}: </strong>{vehicle.brand}\r\n          </TableCell>\r\n          <TableCell align=\"left\"  >\r\n            <strong>Model: </strong>{vehicle.model}\r\n          </TableCell>\r\n          <TableCell align=\"left\" >\r\n          <strong>{t('category')}: </strong>{vehicle.category}\r\n          </TableCell>\r\n          <TableCell align=\"right\" >\r\n          <strong>{t('price')}: </strong>{vehicle.price.toFixed(2)}PLN\r\n          </TableCell>\r\n          <TableCell style={{  padding: 0 }} align=\"right\">\r\n                <IconButton aria-label=\"edit\" className={classes.margin} onClick={()=>{\r\n                  setHistoryModalIsOpen(true);\r\n                  setVehicleId(vehicle.id);\r\n                }}>\r\n                  <VisibilityIcon />\r\n                </IconButton>\r\n                \r\n          </TableCell>\r\n        </TableRow>\r\n\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>{t('details')}</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n  \r\n                  <TableBody>\r\n                    <TableRow>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><img style={{width:\"10rem\"}} src={vehicle.pictureUrl} alt=\"Vehicle\" title={vehicle.pictureUrl} /></TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{t('prod-country')}:</strong><br />{vehicle.country}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{t('prod-year')}:</strong><br />{vehicle.yearOfProduction}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"left\"><strong>{t('power')}:</strong><br />{vehicle.power}{t('hp')}</TableCell>\r\n                            <TableCell style={{borderBottom:\"unset\"}} align=\"right\"><strong>{t('description')}:</strong><br /> {vehicle.description}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n\r\n        {historyModalisOpen && (\r\n        <VehicleRentalHistoryModal open={historyModalisOpen} setOpen={setHistoryModalIsOpen} vehicleId={vehicleId} />\r\n      )}\r\n  \r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const RentalsHistoryPage = () => {\r\n    const { t } = useTranslation('navbar');\r\n    const [vehicles, setVehicles] = useState([])\r\n    const [loading, setLoading]= useState(true)\r\n    const [message, setMessage] = useState(t('no-vehicles'))\r\n    const [vehicle, setVehicle] = useState(null);\r\n\r\n    //const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [editVehicleOpen, setEditVehicleOpen] = useState(false);\r\n\r\n    const fetchVehicles = () =>{\r\n      VehicleService.getVehicles().then((response)=>{\r\n        setVehicles(response);\r\n        console.log(response);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) =>{\r\n        console.log(err);\r\n        setMessage(\"Connection error\")\r\n        setLoading(false);\r\n    }) \r\n    }\r\n    useEffect(() => {\r\n      fetchVehicles();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      fetchVehicles();\r\n    }, [editVehicleOpen])\r\n\r\n    if(loading){\r\n      return(\r\n          <div className='container'>\r\n              <Loading type='bars' color='grey' />\r\n          </div>\r\n      )\r\n  }\r\n  if(vehicles.length === 0){\r\n    return(\r\n        <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n            <h2>{message}</h2>\r\n        </header>\r\n        </div>\r\n    )\r\n}\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"container\">\r\n\r\n      <header className=\"jumbotron\">\r\n        <h3>{t('veh-rental-history')}</h3>\r\n      </header>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableBody>\r\n            {vehicles.map((vehicle) => (\r\n              <Row key={vehicle.id} vehicle={vehicle} setVehicle={setVehicle} setEditVehicleOpen={setEditVehicleOpen}/>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default RentalsHistoryPage;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\manager\\BoardManager.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\BoardAdmin.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\manager\\AddVehicleBoard.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\ManageUsersBoard.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\ManageEmployeesBoard.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\VehiclesContainer.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Loading.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\PasswordResetModal.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\VehicleComments.js",["592","593","594","595"],"import React, { useEffect, useState } from 'react'\r\nimport 'date-fns';\r\nimport { format } from \"date-fns\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport VehicleService from \"../services/vehicle.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst VehicleComments = (props) => {\r\n    const { t } = useTranslation('navbar');\r\n    const [comments, setComments] = useState([]);\r\n    const [userComment, setUserComment] = useState(\"\");\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    const fetchComments = () =>{\r\n        VehicleService.getVehicleComments(props.vehicleId).then(\r\n            (response) => {\r\n                console.log(response);\r\n                setComments(response);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchComments();\r\n    }, [])\r\n\r\n    const handleComment = (e) => {\r\n        setUserComment(e.target.value);\r\n    }\r\n    const handlePostComment = (e) =>{\r\n        const comment = {vehicleId:props.vehicleId, customerUsername: user.username, message:userComment};\r\n        UserService.postUserComment(comment).then(\r\n            (response)=>{\r\n                console.log(response);\r\n                fetchComments();\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        )\r\n        console.log(\"Dodawanie komentarza\");\r\n        console.log(user.username);\r\n        setUserComment(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{t('comments')}</h1>\r\n            <br />\r\n            <Paper justify=\"space-between\" style={{ padding: \"10px 20px 40px 20px\" }}>\r\n\r\n            {user !== null && (\r\n                <div>\r\n                <h5>{t('add-your-comment')}</h5>\r\n                <TextareaAutosize onChange={handleComment} style={{ width: \"100%\", paddingLeft: \"5px\" }} rowsMin=\"5\" />\r\n                <Button style={{float:\"right\"}} variant=\"contained\" color=\"primary\" onClick={handlePostComment} >\r\n                {t('add-comment')}\r\n                </Button>\r\n                </div>\r\n            )}\r\n                \r\n                {comments.map((comment) => (\r\n                    <React.Fragment>\r\n                        <Grid container wrap=\"nowrap\" spacing={2} style={{ paddingTop: \"20px\" }}>\r\n                            <Grid item>\r\n                                <Avatar alt=\"Profile pic\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\r\n                            </Grid>\r\n                            <Grid justifyContent=\"left\" item xs zeroMinWidth>\r\n                                <h5 style={{ margin: 0, textAlign: \"left\" }}>{comment.customerUsername}</h5>\r\n                                <p style={{ textAlign: \"left\", paddingLeft: \"20px\" }}>\r\n                                    {comment.message}\r\n                                </p>\r\n                                <p style={{ fontSize: \"small\", textAlign: \"right\", color: \"gray\" }}>\r\n                                {t('posted')} {format(new Date(comment.date), \"yyyy-MM-dd, HH:mm:ss\")}\r\n                                 </p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider variant=\"fullWidth\" style={{ margin: 0 }} />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\nexport default VehicleComments;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Banner.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Hero.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\EditEmployeeModal.js",["596"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport Select from \"react-validation/build/select\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport EmpService from \"../../services/employee.service\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst positionValidator = (value) => {\r\n  if(value === \"\"){\r\n      return (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            Choose Position!\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n        position:'absolute',\r\n        width:'450px',\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        overflow:'scroll',\r\n        height:'90%',\r\n        display:'block',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nexport default function EditEmployeeModal (props){\r\n  const { t } = useTranslation('navbar');\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(props.user.username);\r\n    const [email, setEmail] = useState(props.user.email);\r\n    const [firstName, setName] = useState(props.user.firstName);\r\n    const [lastName, setLastName] = useState(props.user.lastName);\r\n    const [jobTitle, setPosition] = useState(props.user.jobTitle);\r\n    const [bonus, setBonus] = useState(props.user.bonus);\r\n\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const [roles, setRoles] = useState([])\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email);\r\n    };\r\n\r\n    const onChangeName = (e) => {\r\n        const name = e.target.value;\r\n        setName(name);\r\n    };\r\n    const onChangeLastName = (e) => {\r\n        const lastname = e.target.value;\r\n        setLastName(lastname);\r\n    };\r\n    \r\n    const onChangePosition = (e) => {\r\n      const temp = e.target.value;\r\n      setPosition(temp);\r\n    };\r\n    const onChangeBonus = (e) => {\r\n      const temp = e.target.value;\r\n      setBonus(temp);\r\n    };\r\n\r\n\r\n  const handleChangeRole = (event) => {\r\n\r\n    const roleExists = roles.find(role => role === event.target.name) !== undefined;\r\n    const newRoles = roleExists ? roles.filter(role => role !== event.target.name) : [...roles, event.target.name];\r\n    setRoles(newRoles);\r\n\r\n  };\r\n  const roleError = roles.filter((v) => v).length < 1;\r\n\r\n  const employeeDto = {userId:props.user.userId, username,email, firstName, lastName, jobTitle, roles, bonus};\r\n\r\n  \r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n          console.log(employeeDto);\r\n          EmpService.editEmployee(employeeDto).then(\r\n            (response)=>{\r\n              console.log(response);\r\n              handleClose();\r\n            },\r\n            (error)=>{\r\n              console.log(error);\r\n            }\r\n          )\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n      };\r\n        \r\n\r\n        \r\n        const modalBody = (\r\n            <div style={modalStyle} className={classes.paper}>\r\n            <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n            />\r\n\r\n            <Form onSubmit={handleEdit} ref={form}>\r\n            {!successful && (\r\n                <div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">{t('username')}</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={onChangeEmail}\r\n                    validations={[required, validEmail]}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">{t('name')}</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstName\"\r\n                    value={firstName}\r\n                    onChange={onChangeName}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"lastname\">{t('last-name')}</label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={lastName}\r\n                    onChange={onChangeLastName}\r\n                    validations={[required]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"jobTitle\">\r\n                  {t('title')}\r\n                  </label>\r\n                  <Select className=\"form-control\" name='jobTitle' value={jobTitle} onChange={onChangePosition} validations={[positionValidator]}>\r\n                          <option value=''>{t('choose-title')}</option>\r\n                          <option value='Employee'>{t('employee')}</option>\r\n                          <option value='Manager'>{t('manager')}</option>\r\n                          <option value='Admin'>{t('admin')}</option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"roles\">\r\n                  {t('roles')}\r\n                  </label>\r\n                  <br />\r\n                <FormControl style ={{margin:0}} required error={roleError} value={roles} component=\"fieldset\" className={classes.formControl}>\r\n                    <FormControlLabel\r\n                      control={<Checkbox color=\"primary\" onChange={handleChangeRole} name=\"employee\" />}\r\n                      label=\"regular\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={<Checkbox color=\"primary\" onChange={handleChangeRole} name=\"manager\" />}\r\n                      label=\"manager\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={<Checkbox color=\"primary\" onChange={handleChangeRole} name=\"admin\" />}\r\n                      label=\"admin\"\r\n                    />\r\n                  <FormHelperText>{t('pick-atleast-one')}</FormHelperText>\r\n                </FormControl>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"bonus\">Bonus</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"form-control w-25\"\r\n                  name=\"bonus\"\r\n                  value={bonus}\r\n                  onChange={onChangeBonus}\r\n                />\r\n            </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary btn-block\">{t('edit-employee')}</button>\r\n                </div>\r\n\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n                <div className=\"form-group\">\r\n                <div\r\n                    className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\r\n                    role=\"alert\"\r\n                >\r\n                    {message}\r\n                </div>\r\n                </div>\r\n            )}\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n            </Form>\r\n        </div>\r\n        );\r\n\r\n        return(\r\n            <Modal\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            >\r\n            {modalBody}\r\n        </Modal>\r\n        )\r\n    }","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\DeleteUserDialog.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\AddNewUserModal.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\admin\\EditUserModal.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\auth.service.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\vehicle.service.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\user.service.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\customer.service.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\faq.service.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\manager\\VehicleRentalHistoryModal.js",["597","598"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport VehicleService from \"../../services/vehicle.service\";\r\nimport { format } from \"date-fns\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n        position:'absolute',\r\n        //width:'90%',\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        //overflow:'scroll',\r\n        // height:'90%',\r\n        display:'block',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\npaper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n},\r\nroot: {\r\n    display: 'flex',\r\n},\r\nformControl: {\r\n    margin: theme.spacing(3),\r\n},\r\n}));\r\n\r\nconst EditVehicleModal = (props) => {\r\n    const { t } = useTranslation('navbar');\r\n    const vehicleId = props.vehicleId;\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [rentals, setRentals] = useState([]);\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(vehicleId);\r\n        VehicleService.getRentalHistory(vehicleId).then(\r\n            (response)=>{\r\n                console.log(response);\r\n                setRentals(response.rentals);\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        )\r\n      }, [])\r\n\r\nconst modalBody = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n        <TableContainer component={Paper}>\r\n            <Table  aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell align=\"right\">{t('start-date')}</TableCell>\r\n                        <TableCell align=\"right\">{t('end-date')}</TableCell>\r\n                        <TableCell align=\"right\">{t('price')}</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                {rentals.map((rental) => (\r\n                    <TableRow key={rental.id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {rental.id}  \r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{format(new Date(rental.startDate), \"yyyy-MM-dd\")}</TableCell>\r\n                        <TableCell align=\"right\">{format(new Date(rental.endDate), \"yyyy-MM-dd\")}</TableCell>\r\n                        <TableCell align=\"right\">{rental.cost.toFixed(2)}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody> \r\n\r\n            </Table>\r\n        </TableContainer>\r\n    </div>\r\n);\r\n\r\n\r\nreturn(\r\n    <Modal\r\n    open={props.open}\r\n    onClose={handleClose}\r\n    aria-labelledby=\"simple-modal-title\"\r\n    aria-describedby=\"simple-modal-description\"\r\n    >\r\n    {modalBody}\r\n</Modal>\r\n);\r\n    \r\n  \r\n};\r\n\r\nexport default EditVehicleModal;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\components\\Vehicle.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\employee.service.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\services\\auth-header.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\AddLicenseModal.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\AddComplaintModal.js",["599"],"import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport UserService from \"../../services/user.service\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nexport default function AddComplaintModal(props){\r\n    const { t } = useTranslation('navbar');\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [helpText, setHelpText] = React.useState(t('desc-your-problem'));\r\n\r\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n    const [complaint, setComplaint] = useState(\"\");\r\n\r\n    const onChangeComplaint = (e) =>{\r\n      const q = e.target.value;\r\n      setComplaint(q);\r\n    }\r\n\r\n    const handleAddComplaint = () =>{\r\n        if(complaint === \"\"){\r\n            setHelpText(t('field-cant-be-empty'));\r\n            return;\r\n        }\r\n        UserService.addComplaint(props.rentalId, complaint).then(\r\n          (response)=>{\r\n            console.log(response);\r\n            window.alert(t('new-complaint-created'));\r\n          },\r\n          (error)=>{\r\n            console.log(error);\r\n          }\r\n        )\r\n        props.setOpen(false);\r\n      }\r\n\r\n      const handleClose = () => {\r\n        props.setOpen(false);\r\n      };\r\n    \r\n      const modalBody = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">{t('create-complaint-for')} #{props.rentalId}</h2>\r\n          \r\n          <TextareaAutosize placeholder={helpText} id=\"standard-basic\" style={{ width: \"100%\", paddingLeft: \"5px\", border:\"1px solid black\" }} rowsMin=\"5\" onChange={onChangeComplaint}/>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => handleAddComplaint()}>\r\n          {t('make-a-complaint')}\r\n          </Button>\r\n          \r\n        </div>\r\n      );\r\n\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {modalBody}\r\n      </Modal>\r\n    )\r\n}","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\AddNewInsModal.js",["600"],"import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CurrencyInput from 'react-currency-input-field';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport 'date-fns';\r\nimport { format } from \"date-fns\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport EmpService from \"../../services/employee.service\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n\r\nexport default function EditFAQModal (props){\r\n    const { t } = useTranslation('navbar');\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const [vehicleId, setId] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n\r\n\r\n        \r\n    const onChangeId = (e) =>{\r\n      const q = e.target.value;\r\n      setId(q);\r\n    }\r\n\r\n\r\n    const handleAdd = () =>{\r\n        if(props.isInsurancesList){\r\n            console.log(\"add insurance\");\r\n            EmpService.addInsurance(vehicleId, startDate, endDate, price).then(\r\n                (response)=>{\r\n                    console.log(response);\r\n                    props.fetchInsurances();\r\n                },\r\n                (error=>{\r\n                    console.log(error);\r\n                })\r\n            )\r\n        }\r\n        else{\r\n            console.log(\"add inspection\");\r\n            EmpService.addInspection(vehicleId, startDate, endDate, price).then(\r\n                (response)=>{\r\n                    console.log(response);\r\n                    props.fetchInspectionsAdd();\r\n                },\r\n                (error=>{\r\n                    console.log(error);\r\n                })\r\n            )\r\n        }\r\n        props.setOpen(false);\r\n      }\r\n\r\n      const handleClose = () => {\r\n\r\n        props.setOpen(false);\r\n      };\r\n\r\n      const handleStartDateChange = (date) => {\r\n        setStartDate(date);\r\n      };\r\n    \r\n      const handleEndDateChange = (date) => {\r\n        setEndDate(date);\r\n      };\r\n    \r\n      const modalBody = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">{props.isInsurancesList ? t('add-insurance') : t('add-inspection')}</h2>\r\n        <form className={classes.root} autoComplete=\"off\">\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n            <TextField type=\"number\" label={t('vehicleid')} onChange={onChangeId} />\r\n        </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n                <label style={{paddingTop:\"8px\"}} htmlFor=\"price\">{t('price')}: </label>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={10}>\r\n                <CurrencyInput\r\n                        style={{minWidth:\"6rem\"}}\r\n                        className=\"form-control w-25\"\r\n                        name=\"price\"\r\n                        placeholder=\"PLN\"\r\n                        allowDecimals={true}\r\n                        decimalsLimit={2}\r\n                        onChange={(value) => setPrice(value)}\r\n                    />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n                <label style={{paddingTop:\"8px\"}} htmlFor=\"price\">{t('purchase-date')}: </label>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                    <KeyboardDatePicker\r\n                    value={startDate}\r\n                    onChange={handleStartDateChange}\r\n                    format=\"yyyy-MM-dd\"\r\n                    />\r\n\r\n                </MuiPickersUtilsProvider> \r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n                <label style={{paddingTop:\"8px\"}} htmlFor=\"price\">{t('exp-date')}: </label>\r\n            </Grid>\r\n             \r\n            <Grid item xs={12} sm={8}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                    <KeyboardDatePicker\r\n                    value={endDate}\r\n                    minDate={startDate}\r\n                    onChange={handleEndDateChange}\r\n                    format=\"yyyy-MM-dd\"\r\n                    />\r\n\r\n                </MuiPickersUtilsProvider> \r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={12}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => handleAdd()}>\r\n                {t('add')}\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n          \r\n        </div>\r\n      );\r\n\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {modalBody}\r\n      </Modal>\r\n    )\r\n}","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\AddOfferModal.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\RemoveComplainDialog.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\EditVehicleModal.js",["601"],"import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport Select from \"react-validation/build/select\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { CountryDropdown} from 'react-country-region-selector';\r\nimport VehicleService from \"../../services/vehicle.service\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport CurrencyInput from 'react-currency-input-field';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\nconst brandValidator = (value) => {\r\n    if(value === \"\"){\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              Choose Brand!\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n        position:'absolute',\r\n        width:'450px',\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        overflow:'scroll',\r\n        height:'90%',\r\n        display:'block',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nconst EditVehicleModal = (props) => {\r\n    const { t } = useTranslation('navbar');\r\n    const vehicle = props.vehicle;\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [brand, setBrand] = useState(vehicle.brand);\r\n    const [category, setCategory] = useState(vehicle.category);\r\n    const [model, setModel] = useState(vehicle.model);\r\n    const [year, setYear] = useState(vehicle.yearOfProduction);\r\n    const [country, setCountry] = useState(vehicle.country);\r\n    const [power, setPower] = useState(vehicle.power);\r\n    const [price, setPrice] = useState(vehicle.price);\r\n    const [description, setDesc] = useState(vehicle.description);\r\n    const [picture, setPicture] = useState(vehicle.pictureUrl);\r\n\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeBrand = (e) => {\r\n        const brand = e.target.value;\r\n        setBrand(brand);\r\n    }\r\n\r\n    const onChangeCategory = (e) => {\r\n      const category = e.target.value;\r\n      setCategory(category);\r\n  }\r\n\r\n    const onChangeModel = (e) =>{\r\n        const model = e.target.value;\r\n        setModel(model);\r\n    }\r\n\r\n    const onChangeYear = (e) =>{\r\n        const year = e.target.value;\r\n        setYear(year);\r\n    }\r\n\r\n    const onChangePower = (e) =>{\r\n        const power = e.target.value;\r\n        setPower(power);\r\n    }\r\n    const onChangeDesc = (e) =>{\r\n        const description = e.target.value;\r\n        setDesc(description);\r\n    }\r\n    const onChangePicture = (e) =>{\r\n        const picture = e.target.value;\r\n        setPicture(picture);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        form.current.validateAll();\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        if (checkBtn.current.context._errors.length === 0 && country !== \"\" )  {\r\n          \r\n          const vehicleDto = {id:vehicle.id,brand, model, yearOfProduction:year, country, power, price, description, pictureUrl:picture, category};\r\n          console.log(\"Pressed edit button\");\r\n            VehicleService.updateVehicle(vehicleDto).then(\r\n                (response)=>{\r\n                    console.log(response);\r\n                    handleClose();\r\n                },\r\n                (error)=>{\r\n                    console.log(error);\r\n                }\r\n            )\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n      };\r\n\r\n    const modalBody = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      \r\n        <Form ref={form} onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"brand\">\r\n                {t('brand')}:\r\n                </label>\r\n                <Select className=\"form-control\" value={brand} name='brand' onChange={onChangeBrand} validations={[brandValidator]}>\r\n                        <option value=''>{t('choose-brand')}</option>\r\n                        <option value='Audi'>Audi</option>\r\n                        <option value='BMW'>BMW</option>\r\n                        <option value='Ferrari'>Ferrari</option>\r\n                        <option value='Mercedes'>Mercedes</option>\r\n                        <option value='Nissan'>Nissan</option>\r\n                        <option value='Volkswagen'>Volkswagen</option>\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"category\">\r\n                {t('category')}:\r\n                </label>\r\n                <Select className=\"form-control\" name='category' value={category} onChange={onChangeCategory} validations={[brandValidator]}>\r\n                        <option value=''>{t('choose-category')}</option>\r\n                        <option value='HATCHBACK'>Hatchback</option>\r\n                        <option value='SEDAN'>Sedan</option>\r\n                        <option value='SUV'>SUV</option>\r\n                        <option value='COUPE'>Coupe</option>\r\n                        <option value='SPORTS'>Sports</option>\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"model\">Model</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"model\"\r\n                  value={model}\r\n                  onChange={onChangeModel}\r\n                  validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"year\">{t('prod-year')}</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"form-control w-25\"\r\n                  name=\"year\"\r\n                  value={year}\r\n                  onChange={onChangeYear}\r\n                  validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <label htmlFor=\"country\">{t('country')}</label>\r\n               <div>\r\n                  <CountryDropdown\r\n                    className=\"form-control\"\r\n                    name=\"country\"\r\n                    value={country}\r\n                    onChange={(value)=> setCountry(value)}\r\n                  />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"power\">{t('power')}</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"form-control w-25\"\r\n                  name=\"power\"\r\n                  value={power}\r\n                  onChange={onChangePower}\r\n                  validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"price\">{t('price-per-day')}</label>\r\n                <CurrencyInput\r\n                  className=\"form-control w-25\"\r\n                  name=\"price\"\r\n                  placeholder=\"PLN\"\r\n                  value={price}\r\n                  allowDecimals={true}\r\n                  decimalsLimit={2}\r\n                  onChange={(value) => setPrice(value)}\r\n             />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"description\">{t('description')}</label>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={onChangeDesc}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"picture\">{t('pic-url')}</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"picture\"\r\n                  value={picture}\r\n                  onChange={onChangePicture}\r\n                  validations={[required]}\r\n                />\r\n                <br />\r\n                <img className=\"w-100\" src={picture} alt={picture}></img>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">{t('edit-vehicle')}</button>\r\n            </div>\r\n\r\n            {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n\r\n        </Form>\r\n    </div>\r\n\r\n    )\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        >\r\n        {modalBody}\r\n    </Modal>\r\n    );\r\n    \r\n  \r\n};\r\n\r\nexport default EditVehicleModal;","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\VerifyPaymentDialog.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\VerifyLicenseDialog.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\AddNewFAQModal.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\EditFAQModal.js",["602"],"import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthService from '../../services/auth.service';\r\nimport FaqService from \"../../services/faq.service\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n\r\nexport default function EditFAQModal (props){\r\n  const { t } = useTranslation('navbar');\r\n\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [fieldError, setFieldError] = React.useState(false);\r\n    const [fieldError2, setFieldError2] = React.useState(false);\r\n    const [helpText, setHelpText] = React.useState(\"\");\r\n    const [helpText2, setHelpText2] = React.useState(\"\");\r\n\r\n    const faq = props.faq;\r\n    const [question, setQuestion] = useState(faq.question);\r\n    const [answer, setAnswer] = useState(faq.answer);\r\n\r\n    const user = AuthService.getCurrentUser();\r\n        \r\n    const onChangeQuestion = (e) =>{\r\n      const q = e.target.value;\r\n      setQuestion(q);\r\n    }\r\n\r\n    const onChangeAnswer = (e) =>{\r\n      const a = e.target.value;\r\n      setAnswer(a);\r\n    }\r\n\r\n    const handleEditFAQ = () =>{\r\n        if(question === \"\"){\r\n            setFieldError(true);\r\n            setHelpText(t('field-cant-be-empty'));\r\n        }\r\n        else setFieldError(false);\r\n        if(answer === \"\"){\r\n            setFieldError2(true);\r\n            setHelpText2(t('field-cant-be-empty'));\r\n        }\r\n        else setFieldError2(false);\r\n\r\n        if(question === \"\" || answer === \"\"){\r\n            return;\r\n        }\r\n        //edit with server\r\n\r\n        //fetch new array after edit\r\n        //props.fetchFaq();\r\n        FaqService.editFaq(faq.id, question, answer).then(\r\n          (response)=>{\r\n            console.log(response);\r\n            props.fetchFaq();\r\n          },\r\n          (error)=>{\r\n            console.log(error);\r\n          }\r\n        )\r\n\r\n        //==========================\r\n        props.setOpen(false);\r\n      }\r\n\r\n      const handleClose = () => {\r\n        setFieldError(false);\r\n        setFieldError2(false);\r\n        setHelpText(\"\");\r\n        setHelpText2(\"\");\r\n\r\n        props.setOpen(false);\r\n      };\r\n    \r\n      const modalBody = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">{t('edit-faq')}</h2>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField error={fieldError} helperText={helpText} id=\"standard-basic\" style={{minWidth:\"500px\"}} label={t('question')} onChange={onChangeQuestion} defaultValue={faq.question} />\r\n          <TextField error={fieldError2} helperText={helpText2} id=\"standard-basic\" style={{minWidth:\"500px\"}} label={t('answer')} onChange={onChangeAnswer} defaultValue={faq.answer}/> <br /><br />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => handleEditFAQ()}>\r\n          {t('edit')}\r\n          </Button>\r\n        </form>\r\n          \r\n        </div>\r\n      );\r\n\r\n    return(\r\n        <Modal\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {modalBody}\r\n      </Modal>\r\n    )\r\n}","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\employee\\DeleteFaqDialog.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\checkout\\Checkout.js",["603"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport CustomerService from \"../../../services/customer.service\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst card = {cash:false, cardName:\"\", cardNumber:\"\", expDate:\"\", cvv:\"\"};\r\n\r\nexport default function Checkout() {\r\n  const { t } = useTranslation('navbar');\r\n\r\n  const classes = useStyles();\r\n  const [info, setInfo] = useState(\"\");\r\n  const steps = [t('shipping-address'), t('payment-details'), t('review-order')];\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n            return <AddressForm />;\r\n            case 1:\r\n            return <PaymentForm card={card} />;\r\n            case 2:\r\n            return <Review card={card} setInfo={setInfo}/>;\r\n            default:\r\n            throw new Error('Unknown step');\r\n        }\r\n        }\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    if(activeStep + 1 === steps.length){\r\n        console.log(\"Order has been finalized\");\r\n        console.log(info);\r\n        let payment;\r\n\r\n        if(card.cash){\r\n            payment = \"cash\"\r\n        }\r\n        else payment = \"card\"\r\n\r\n        CustomerService.confirmOrder(info, payment).then(\r\n          (response)=>{\r\n              console.log(\"w srodku confirmOrder\");\r\n              console.log(response);\r\n          },\r\n          (error)=>{\r\n              console.log(error);\r\n          }\r\n        )\r\n    }\r\n\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      \r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n          {t('checkout')}\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                {t('thank-you-for-order')}\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      {t('back')}\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? t('place-order') : t('next')}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\checkout\\AddressForm.js",[],"D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\checkout\\Review.js",["604"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { format } from \"date-fns\";\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n  const { t } = useTranslation('navbar');\r\n\r\n  const classes = useStyles();\r\n  const card = props.card;\r\n\r\n  const [cart, setCart] = React.useState(JSON.parse(sessionStorage.getItem(\"cart\")));\r\n  const cartTotal = cart.reduce((total, { resPrice = 0 }) => total + resPrice, 0);\r\n  \r\n  const handleAddInfChange = (event) =>{\r\n      props.setInfo(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n      {t('order-summary')}\r\n      </Typography>\r\n      <List disablePadding>\r\n        {cart.map((product, index) => (\r\n          <ListItem className={classes.listItem} key={index}>\r\n            <ListItemText primary={index+1 + \". \" +product.brand + \" \" + product.model} secondary={format(new Date(product.startDate), \"yyyy/MM/dd\") + \" - \" + format(new Date(product.endDate), \"yyyy/MM/dd\")} />\r\n            <Typography variant=\"body2\">{product.resPrice}.00PLN</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {cartTotal}.00PLN\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n          {t('our-localization')}\r\n          </Typography>\r\n          <Typography gutterBottom>VehicleRental</Typography>\r\n          <Typography gutterBottom>Słoneczna 10</Typography>\r\n          <Typography gutterBottom>Kraków</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n          {t('payment-details')}\r\n          </Typography>\r\n          \r\n              {card.cash && (\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                    <Typography gutterBottom>{t('paid-with-cash')}</Typography>  \r\n                    </Grid>\r\n                  </Grid>\r\n              )}\r\n\r\n              {!card.cash && (\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{t('name')}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{card.cardName}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{t('card-number')}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{card.cardNumber}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{t('exp-date')}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{card.expDate}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>CVV</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Typography gutterBottom>{card.cvv}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n              )}\r\n        </Grid>\r\n        <Typography variant=\"h6\" gutterBottom className={classes.title}>{t('additional-info')}</Typography>\r\n        <TextareaAutosize onChange={handleAddInfChange} style={{width:\"100%\"}} rowsMin=\"5\" />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\Workspaces\\rental\\frontend\\Vehicle-Rental-Frontend\\src\\pages\\user\\checkout\\PaymentForm.js",[],{"ruleId":"605","replacedBy":"606"},{"ruleId":"607","replacedBy":"608"},{"ruleId":"609","severity":1,"message":"610","line":52,"column":17,"nodeType":"611","messageId":"612","endLine":52,"endColumn":27},{"ruleId":"609","severity":1,"message":"613","line":25,"column":16,"nodeType":"611","messageId":"612","endLine":25,"endColumn":23},{"ruleId":"614","severity":1,"message":"615","line":43,"column":6,"nodeType":"616","endLine":43,"endColumn":26,"suggestions":"617"},{"ruleId":"614","severity":1,"message":"618","line":84,"column":6,"nodeType":"616","endLine":84,"endColumn":8,"suggestions":"619"},{"ruleId":"609","severity":1,"message":"620","line":46,"column":11,"nodeType":"611","messageId":"612","endLine":46,"endColumn":15},{"ruleId":"609","severity":1,"message":"621","line":3,"column":35,"nodeType":"611","messageId":"612","endLine":3,"endColumn":44},{"ruleId":"609","severity":1,"message":"621","line":1,"column":27,"nodeType":"611","messageId":"612","endLine":1,"endColumn":36},{"ruleId":"614","severity":1,"message":"622","line":57,"column":8,"nodeType":"616","endLine":57,"endColumn":10,"suggestions":"623"},{"ruleId":"609","severity":1,"message":"624","line":16,"column":8,"nodeType":"611","messageId":"612","endLine":16,"endColumn":18},{"ruleId":"609","severity":1,"message":"625","line":8,"column":8,"nodeType":"611","messageId":"612","endLine":8,"endColumn":18},{"ruleId":"609","severity":1,"message":"621","line":1,"column":27,"nodeType":"611","messageId":"612","endLine":1,"endColumn":36},{"ruleId":"609","severity":1,"message":"613","line":27,"column":16,"nodeType":"611","messageId":"612","endLine":27,"endColumn":23},{"ruleId":"609","severity":1,"message":"626","line":9,"column":10,"nodeType":"611","messageId":"612","endLine":9,"endColumn":16},{"ruleId":"609","severity":1,"message":"627","line":110,"column":12,"nodeType":"611","messageId":"612","endLine":110,"endColumn":19},{"ruleId":"609","severity":1,"message":"628","line":1,"column":27,"nodeType":"611","messageId":"612","endLine":1,"endColumn":33},{"ruleId":"614","severity":1,"message":"629","line":69,"column":10,"nodeType":"616","endLine":69,"endColumn":12,"suggestions":"630"},{"ruleId":"609","severity":1,"message":"631","line":35,"column":12,"nodeType":"611","messageId":"612","endLine":35,"endColumn":30},{"ruleId":"609","severity":1,"message":"632","line":35,"column":32,"nodeType":"611","messageId":"612","endLine":35,"endColumn":53},{"ruleId":"609","severity":1,"message":"633","line":36,"column":12,"nodeType":"611","messageId":"612","endLine":36,"endColumn":21},{"ruleId":"609","severity":1,"message":"634","line":36,"column":23,"nodeType":"611","messageId":"612","endLine":36,"endColumn":35},{"ruleId":"609","severity":1,"message":"627","line":109,"column":12,"nodeType":"611","messageId":"612","endLine":109,"endColumn":19},{"ruleId":"609","severity":1,"message":"635","line":109,"column":21,"nodeType":"611","messageId":"612","endLine":109,"endColumn":31},{"ruleId":"609","severity":1,"message":"636","line":115,"column":29,"nodeType":"611","messageId":"612","endLine":115,"endColumn":47},{"ruleId":"614","severity":1,"message":"637","line":132,"column":8,"nodeType":"616","endLine":132,"endColumn":10,"suggestions":"638"},{"ruleId":"614","severity":1,"message":"637","line":136,"column":8,"nodeType":"616","endLine":136,"endColumn":25,"suggestions":"639"},{"ruleId":"609","severity":1,"message":"640","line":4,"column":8,"nodeType":"611","messageId":"612","endLine":4,"endColumn":20},{"ruleId":"609","severity":1,"message":"641","line":5,"column":10,"nodeType":"611","messageId":"612","endLine":5,"endColumn":33},{"ruleId":"609","severity":1,"message":"642","line":5,"column":35,"nodeType":"611","messageId":"612","endLine":5,"endColumn":53},{"ruleId":"614","severity":1,"message":"643","line":33,"column":8,"nodeType":"616","endLine":33,"endColumn":10,"suggestions":"644"},{"ruleId":"605","replacedBy":"645"},{"ruleId":"607","replacedBy":"646"},{"ruleId":"609","severity":1,"message":"620","line":36,"column":11,"nodeType":"611","messageId":"612","endLine":36,"endColumn":15},{"ruleId":"605","replacedBy":"647"},{"ruleId":"607","replacedBy":"648"},{"ruleId":"609","severity":1,"message":"649","line":8,"column":8,"nodeType":"611","messageId":"612","endLine":8,"endColumn":20},{"ruleId":"609","severity":1,"message":"613","line":27,"column":16,"nodeType":"611","messageId":"612","endLine":27,"endColumn":23},{"ruleId":"614","severity":1,"message":"615","line":45,"column":6,"nodeType":"616","endLine":45,"endColumn":26,"suggestions":"650"},{"ruleId":"614","severity":1,"message":"618","line":86,"column":6,"nodeType":"616","endLine":86,"endColumn":8,"suggestions":"651"},{"ruleId":"609","severity":1,"message":"610","line":56,"column":17,"nodeType":"611","messageId":"612","endLine":56,"endColumn":27},{"ruleId":"609","severity":1,"message":"621","line":1,"column":27,"nodeType":"611","messageId":"612","endLine":1,"endColumn":36},{"ruleId":"609","severity":1,"message":"624","line":16,"column":8,"nodeType":"611","messageId":"612","endLine":16,"endColumn":18},{"ruleId":"609","severity":1,"message":"631","line":37,"column":12,"nodeType":"611","messageId":"612","endLine":37,"endColumn":30},{"ruleId":"609","severity":1,"message":"632","line":37,"column":32,"nodeType":"611","messageId":"612","endLine":37,"endColumn":53},{"ruleId":"609","severity":1,"message":"633","line":38,"column":12,"nodeType":"611","messageId":"612","endLine":38,"endColumn":21},{"ruleId":"609","severity":1,"message":"634","line":38,"column":23,"nodeType":"611","messageId":"612","endLine":38,"endColumn":35},{"ruleId":"609","severity":1,"message":"627","line":112,"column":12,"nodeType":"611","messageId":"612","endLine":112,"endColumn":19},{"ruleId":"609","severity":1,"message":"635","line":112,"column":21,"nodeType":"611","messageId":"612","endLine":112,"endColumn":31},{"ruleId":"609","severity":1,"message":"636","line":118,"column":29,"nodeType":"611","messageId":"612","endLine":118,"endColumn":47},{"ruleId":"614","severity":1,"message":"637","line":135,"column":8,"nodeType":"616","endLine":135,"endColumn":10,"suggestions":"652"},{"ruleId":"614","severity":1,"message":"637","line":139,"column":8,"nodeType":"616","endLine":139,"endColumn":25,"suggestions":"653"},{"ruleId":"614","severity":1,"message":"622","line":59,"column":8,"nodeType":"616","endLine":59,"endColumn":10,"suggestions":"654"},{"ruleId":"609","severity":1,"message":"627","line":111,"column":12,"nodeType":"611","messageId":"612","endLine":111,"endColumn":19},{"ruleId":"609","severity":1,"message":"640","line":4,"column":8,"nodeType":"611","messageId":"612","endLine":4,"endColumn":20},{"ruleId":"609","severity":1,"message":"641","line":5,"column":10,"nodeType":"611","messageId":"612","endLine":5,"endColumn":33},{"ruleId":"609","severity":1,"message":"642","line":5,"column":35,"nodeType":"611","messageId":"612","endLine":5,"endColumn":53},{"ruleId":"614","severity":1,"message":"643","line":35,"column":8,"nodeType":"616","endLine":35,"endColumn":10,"suggestions":"655"},{"ruleId":"609","severity":1,"message":"621","line":3,"column":35,"nodeType":"611","messageId":"612","endLine":3,"endColumn":44},{"ruleId":"609","severity":1,"message":"628","line":1,"column":27,"nodeType":"611","messageId":"612","endLine":1,"endColumn":33},{"ruleId":"614","severity":1,"message":"629","line":69,"column":10,"nodeType":"616","endLine":69,"endColumn":12,"suggestions":"656"},{"ruleId":"609","severity":1,"message":"620","line":38,"column":11,"nodeType":"611","messageId":"612","endLine":38,"endColumn":15},{"ruleId":"609","severity":1,"message":"626","line":9,"column":10,"nodeType":"611","messageId":"612","endLine":9,"endColumn":16},{"ruleId":"609","severity":1,"message":"625","line":8,"column":8,"nodeType":"611","messageId":"612","endLine":8,"endColumn":18},{"ruleId":"609","severity":1,"message":"620","line":49,"column":11,"nodeType":"611","messageId":"612","endLine":49,"endColumn":15},{"ruleId":"609","severity":1,"message":"621","line":1,"column":27,"nodeType":"611","messageId":"612","endLine":1,"endColumn":36},{"ruleId":"609","severity":1,"message":"613","line":30,"column":16,"nodeType":"611","messageId":"612","endLine":30,"endColumn":23},"no-native-reassign",["657"],"no-negated-in-lhs",["658"],"no-unused-vars","'resMessage' is assigned a value but never used.","Identifier","unusedVar","'setCart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countPrice'. Either include it or remove the dependency array.","ArrayExpression",["659"],"React Hook useEffect has missing dependencies: 'cart', 'cartItem', 'fetchStatus', 'user', and 'vehicle.id'. Either include them or remove the dependency array.",["660"],"'user' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchLicense' and 'fetchStatus'. Either include them or remove the dependency array.",["661"],"'DeleteIcon' is defined but never used.","'DatePicker' is defined but never used.","'format' is defined but never used.","'vehicle' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'vehicleId'. Either include it or remove the dependency array.",["662"],"'historyModalisOpen' is assigned a value but never used.","'setHistoryModalIsOpen' is assigned a value but never used.","'vehicleId' is assigned a value but never used.","'setVehicleId' is assigned a value but never used.","'setVehicle' is assigned a value but never used.","'setEditVehicleOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["663"],["664"],"'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.",["665"],["657"],["658"],["657"],["658"],"'LanguageIcon' is defined but never used.",["666"],["667"],["668"],["669"],["670"],["671"],["672"],"no-global-assign","no-unsafe-negation",{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"673","fix":"687"},{"desc":"675","fix":"688"},{"desc":"681","fix":"689"},{"desc":"683","fix":"690"},{"desc":"677","fix":"691"},{"desc":"685","fix":"692"},{"desc":"679","fix":"693"},"Update the dependencies array to be: [startDate, endDate, countPrice]",{"range":"694","text":"695"},"Update the dependencies array to be: [cart, cartItem, fetchStatus, user, vehicle.id]",{"range":"696","text":"697"},"Update the dependencies array to be: [fetchLicense, fetchStatus]",{"range":"698","text":"699"},"Update the dependencies array to be: [vehicleId]",{"range":"700","text":"701"},"Update the dependencies array to be: [fetchOrders]",{"range":"702","text":"703"},"Update the dependencies array to be: [editVehicleOpen, fetchOrders]",{"range":"704","text":"705"},"Update the dependencies array to be: [fetchComments]",{"range":"706","text":"707"},{"range":"708","text":"695"},{"range":"709","text":"697"},{"range":"710","text":"703"},{"range":"711","text":"705"},{"range":"712","text":"699"},{"range":"713","text":"707"},{"range":"714","text":"701"},[1549,1569],"[startDate, endDate, countPrice]",[2512,2514],"[cart, cartItem, fetchStatus, user, vehicle.id]",[1687,1689],"[fetchLicense, fetchStatus]",[1933,1935],"[vehicleId]",[5810,5812],"[fetchOrders]",[5869,5886],"[editVehicleOpen, fetchOrders]",[1166,1168],"[fetchComments]",[1641,1661],[2604,2606],[5998,6000],[6057,6074],[1781,1783],[1260,1262],[2023,2025]]